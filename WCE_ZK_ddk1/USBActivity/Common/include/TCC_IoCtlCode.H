
#ifndef __TCC_IOCTRLCODE_H__
#define __TCC_IOCTRLCODE_H__

#define MHz 1

#define	ON	1
#define	OFF	0

typedef struct _stCKCIOCTL{
	unsigned int ControlCode;
	//Reset or bus Enable name
	unsigned int PeriRBName; 
	//Peri Clock
	unsigned int PeriClockName; 
	unsigned int PeriClockSource; 
	unsigned int PeriUnit;			//Mhz or Khz
	unsigned int PeriFreq;
	//PLL Cllock
	unsigned int PllChannel;
	unsigned int PllValue;
	unsigned int P;
	unsigned int M;
	unsigned int S;
	//CPU Cllock
	unsigned int CpuValue; 
	//BUS Cllock
	unsigned int BusValue;
	//mode 
	unsigned int Mode; // Enable, Disable, ahalf, athird

	unsigned int Priority;
}stCKCIOCTL;


typedef struct _stCKCINFO{
	unsigned int CurrentBusFreq;
	unsigned int CurrentSysFreq;
	unsigned int CurrentCpuFreq;
//#ifdef __TCC79XX_WINCE__
	unsigned int CurrentSubCpuFreq;
//#endif
	int PeriFreq; 
	unsigned int ValidPll[30];
	int retVal;
	unsigned int CurrentPriority;

}stCKCINFO;

/*******************************************
         CKC Controller IOCTL CODE
********************************************/
#define	IOCTL_HAL_TCCCKC	CTL_CODE(FILE_DEVICE_HAL, 1000, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define TCC_IOCTLCode(f,m)  CTL_CODE ( FILE_DEVICE_UNKNOWN , 0xA00 + (f), (m), FILE_ANY_ACCESS )

#define	IOCTL_CKC_SET_PERICLOCK			TCC_IOCTLCode(101, METHOD_BUFFERED)
#define	IOCTL_CKC_SET_PERIBUSCLKCTL		TCC_IOCTLCode(102, METHOD_BUFFERED)
#define	IOCTL_CKC_SET_PERISWRESET			TCC_IOCTLCode(103, METHOD_BUFFERED)
#define	IOCTL_CKC_SET_MAINCLOCKCFG		TCC_IOCTLCode(104, METHOD_BUFFERED)
#define	IOCTL_CKC_GET_CLOCKINFO			TCC_IOCTLCode(105, METHOD_BUFFERED)
#define	IOCTL_CKC_GET_VALIDPLLINFO		TCC_IOCTLCode(106, METHOD_BUFFERED)
#define	IOCTL_CKC_GET_PERICLOCK			TCC_IOCTLCode(107, METHOD_BUFFERED)
#define	IOCTL_CKC_GET_PMSCLOCKCFG			TCC_IOCTLCode(108, METHOD_BUFFERED)
#ifdef __TCC79XX_WINCE__
#define	IOCTL_CKC_SET_SUBCPUCLOSE			TCC_IOCTLCode(109, METHOD_BUFFERED)
#define	IOCTL_CKC_SET_SUBCPUMINIMIZE 	TCC_IOCTLCode(110, METHOD_BUFFERED)
#endif

#define	IOCTL_CKC_GET_PERIBUSCLKCTL 		TCC_IOCTLCode(111, METHOD_BUFFERED)

#define	IOCTL_CKC_SET_INITCLKCTL 			TCC_IOCTLCode(112, METHOD_BUFFERED)
#define	IOCTL_CKC_SET_SYSTEMCLKCTL 		TCC_IOCTLCode(113, METHOD_BUFFERED)
#define	IOCTL_CKC_SET_RETURNCLKCTL 		TCC_IOCTLCode(114, METHOD_BUFFERED)
#define	IOCTL_CKC_GET_CURRENTCLKCTL 		TCC_IOCTLCode(115, METHOD_BUFFERED)

#define IOCTL_CKC_POWERON_APPCLKCTL		TCC_IOCTLCode(116, METHOD_BUFFERED)
#define IOCTL_CKC_POWEROFF_APPCLKCTL		TCC_IOCTLCode(117, METHOD_BUFFERED)

#define IOCTL_CKC_POWERON_NAVICLKCTL		TCC_IOCTLCode(118, METHOD_BUFFERED)
#define IOCTL_CKC_POWEROFF_NAVICLKCTL	TCC_IOCTLCode(119, METHOD_BUFFERED)
#define	IOCTL_CKC_GET_MAXCLKCTL 			TCC_IOCTLCode(120, METHOD_BUFFERED)

//extern BOOL CKC_ClockIOControl( UINT32 code, VOID* pInBuffer, UINT32 inSize, VOID* pOutBuffer, UINT32 outSize, UINT32* pOutSize);
/* System Clock Source */
//TCC83x
enum{ 
	S_DIRECTPLL0 = 0,
	S_DIRECTPLL1,
	S_DIVIDEPLL0,
	S_DIVIDEPLL1,
	S_DIRECTXIN,
	S_DIVIDEXIN,
	S_DIRECTXTIN,
	S_DIVIDEXTIN,
	S_SOURCE_MAXNUM,
};

enum{ /* Periperals Clock Source */
	DIRECTPLL0 = 0,
	DIRECTPLL1,
	DIVIDEPLL0,
	DIVIDEPLL1,
	DIRECTXIN,
	DIVIDEXIN,
	DIRECTXTIN,
	DIVIDEXTIN,
	PLL0DIVIDER1,
	PLL1DIVIDER1,
	EXTERNALCLOCK,
	TIMER1,
	TIMER2,
	TIMER3,
	TIMER4,
	CLKFROM48M,
	SOURCE_MAXNUM,
};

//TCC79x
enum{
	PERI79_USB11H,
	PERI79_SDMMC,
	PERI79_MSTICK,
	PERI79_I2C,
	PERI79_LCD,
	PERI79_CAM,
	PERI79_UART0,
	PERI79_UART1,
	PERI79_UART2,
	PERI79_UART3,
	PERI79_TCT,
	PERI79_TCX,
	PERI79_TCZ,
	PERI79_DAI,
	PERI79_GPSB0,
	PERI79_GPSB1,
	PERI79_GPSB2,
	PERI79_GPSB3,
	PERI79_ADC,
	PERI79_SPDIF,
	PERI79_RFREQ,
	PERI79_SCALER,
	PERI79_EHI0,
	PERI79_EHI1,
	PERI79_ALLPERIPERALS
};

enum{
	RB79_USB11HOST=0,
	RB79_USB20FUNCTION,
	RB79_LCD,
	RB79_CAMERA,	
	RB79_HDD,

	RB79_DMA,
	RB79_SDMMC,	
	RB79_MSTICK,
	RB79_I2C,
	RB79_NANDFLASH,
	
	RB79_EHI0,		
	RB79_UART0,
	RB79_UART1,
	RB79_GPSB0,
	RB79_DAI,
	
	RB79_UART2,
	RB79_ECC,
	RB79_SPDIF,
	RB79_GPSB1,
	RB79_SUBPERI,
	
	RB79_GRAPHIC2D,
	RB79_RTC,
	RB79_EXTMEMCTRL,
	RB79_SUBPORCESSOR,		
	RB79_ADC,
	
	RB79_VIDEOCONHW,
	RB79_TIMER,
	RB79_MAINPROCESSOR,
	RB79_VECTORINTCON,
	RB79_M2MSCALER,
	
	RB79_MAILBOX,
	RB79_MAINBUSCOMPO,
	RB79_UART3,
	RB79_SRAMINTER,
	RB79_GPSB2,
	
	RB79_GPSB3,
	RB79_EHI1,	
	RB79_VIDEOENC,
	
	RB79_ALLPERIPERALS,
};
//TCC83x
enum{
	PERI83_RFREQ = 0,		//PCLKCFG0 H
	
	PERI83_I2C,				//PCLKCFG1 H	 I2C

	PERI83_SPIMS0,			//PCLKCFG2 H
	PERI83_SPIMS1,			//PCLKCFG2 L

	PERI83_UART1,			//PCLKCFG3 H
	PERI83_UART0,			//PCLKCFG3 L
	

	PERI83_TCT,				//PCLKCFG4 H TIMER T

	PERI83_TCZ,				//PCLKCFG5 H TIMER Z
	PERI83_TCX,				//PCLKCFG5 L TIMERX
	
	PERI83_DAI0,				//PCLKCFG6 H DAI 
	PERI83_ADC,				//PCLKCFG6 L ADC

	PERI83_DAI,				//PCLKCFG7 H DCO or Divider mode

	PERI83_SCALER,			//PCLKCFG8 H CIF Scaler Clock
	PERI83_CAM,				//PCLKCFG8 L CIF Master Clock

	
	PERI83_LCD,				//PCLKCFG9 H LCD Clock
	PERI83_EHI0,				//PCLKCFG9 L HPI Clock
	
	
	PERI83_UART3,			//PCLKCFG10 H		UART 3
	PERI83_UART2,			//PCLKCFG10 L		UART 2
	
	PERI83_SPDIF,			//PCLKCFG11 H  SPDIF

	PERI83_USB11H,			//PCLKCFG12 H		USBHost

	PERI83_SDMMC,				//PCLKCFG13 H		SD

	
	PERI83_ALLPERIPERALS,
};

enum{
	RB83_DAI = 0,
	RB83_INTERRUPT,
	RB83_TIMER,
	RB83_GPIO,
	RB83_USB20FUNCTION,
	RB83_UART0,
	RB83_UART2,
	RB83_I2C,
	RB83_UART3,
	RB83_ECC,
	RB83_ADC,
	RB83_USB11HOST,
	RB83_GDMA0,
	RB83_LCD,
	RB83_JPEG,
	RB83_RTC,
	RB83_NANDFLASH,
	RB83_SDMMC,
	RB83_GRAPHIC2D,
	RB83_HOSTINTERCACE,
	RB83_HDD,
	RB83_CAMERA,
	RB83_GDMA1,
	RB83_UART1,
	RB83_SPIMS0,
	RB83_M2MSCALER,
	RB83_MAINBUSCOMPO,
	RB83_EXTMEMCTRL,
	RB83_INTMEMCTRL,
	RB83_DTCM,
	RB83_SPIMS1,
	RB83_ARM, //31
	RB83_BDMA, //32
	RB83_ADMA,
	RB83_SPDIFTx,
	
	RB83_ALLPERIPERALS,
};


enum
{
	IDLE_PRIORITY = 0, // Don't Return IDLE_PRIORITY
	LOW_PRIORITY,
	MID_PRIORITY,
	HIGH_PRIORITY,
	MAX_PRIORITY,

	CLOCK_PRIORITY_NUM,
//}stCKC_PRIORITY;
};


#endif