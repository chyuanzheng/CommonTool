#include "stdafx.h"
#include "chip.h"
#include "Param.h"
#include "STLogFile.h"
#include "panel.h"
#include "../PIP/PIP.h"
#include "GXNotify.h"
#include "../Amp.h"

#define MECHANISM_TYPE 1
#define SPECAIL_MACHINE 2



BOOL VolumeSet(int vol)
{
	return chip_bd3702.Volume(vol);
}

void SetSoundField(int iXpos, int iYpos)
{
	int lf = 0;	// «∞◊Û
	int lr = 0;	// ∫Û◊Û
	int rf = 0;	// «∞”“
	int rr = 0; // ∫Û”“
	if (iYpos >= 15)
	{
		// «∞◊Û «∞”“À•ºı
		lf = iYpos-15;
		rf = iYpos-15;
	}
	else
	{
		// ∫Û◊Û,∫Û”“À•ºı
		lr = 15-iYpos;
		rr = 15-iYpos;
	}
	if (iXpos >= 15)
	{
		// «∞◊Û,∫Û◊ÛÀ•ºı
		lf = max(lf, iXpos-15);
		lr = max(lr, iXpos-15);
	}
	else
	{
		// «∞”“,∫Û”“À•ºı
		rf = max(rf, 15-iXpos);
		rr = max(rr, 15-iXpos);
	}
	chip_bd3702.SetRR(lr);
	chip_bd3702.SetLF(lf);
	chip_bd3702.SetRF(rf);
	chip_bd3702.SetLR(rr);
}

void SetSoundAffect(int affect)
{

}

void SetVideoAffect(int affect)
{

}

void SetBright(int b)
{
	//BrightnessSet(b-20);
	IICWrite(0x50, 0x69, b);
}

void SetContrast(int c)
{
	IICWrite(0x50, 0x68, c);	
}

void SetSaturation(int s)
{
	chip_saa7111.SetSaturation(s);
}

void SetHue(int h)
{
	chip_saa7111.HueSet(h);
}

int VolumeGet()
{
	return chip_bd3702.GetCurVolume();
}

BOOL DVDAudio()
{
	chip_bd3702.InputGain(0, 0);
	chip_bd3702.InputSelect(BD3702::MODE_E1);
	chip_bd3702.SaveStatus2();
	return 1;
}
BOOL DVDAVSelect()
{
	BOOL ret = TRUE;
	// “Ù∆µ
	chip_bd3702.InputGain(0, 0);
	ret &= chip_bd3702.InputSelect(BD3702::MODE_E1);
	chip_bd3702.SaveStatus2();
	//  ”∆µ
	ret &= chip_fms6502.Output3Select(FMS6502::INPUT_6);
	return ret;
}

BOOL CEAudio()
{
	chip_bd3702.InputGain(0, 0);
	return chip_bd3702.InputSelect(BD3702::MODE_E2);
}
BOOL CEAVSelect()
{
	BOOL ret = TRUE;
	// “Ù∆µ
	chip_bd3702.InputGain(0, 0);
	ret &= chip_bd3702.InputSelect(BD3702::MODE_E2);
	//  ”∆µ
	ret &= chip_fms6502.Output3Select(FMS6502::INPUT_5);
	chip_njw1110.Out2Select(NJW1110::INPUT_MUTE);
	return ret;
}

BOOL RadioASelect()
{
	BOOL ret = TRUE;
	// “Ù∆µ
	chip_bd3702.InputGain(0, 0);
	ret &= chip_bd3702.InputSelect(BD3702::MODE_B);
	chip_bd3702.SaveStatus2();
	return ret;
}

static NJW2753::INPUT njwInput;
static int	bdInput;
BOOL PhoneASelect()
{
	BOOL ret = TRUE;
	// “Ù∆µ
	chip_bd3702.SaveStatus();
	chip_njw2753.SaveStatus();
	chip_bd3702.InputGain(0, 8);
	chip_njw2753.OutputSelect(NJW2753::INPUT_1);
	ret &= chip_bd3702.InputSelect(BD3702::MODE_A);
	return ret;	
}

BOOL NaviAudio()
{
	BOOL ret = TRUE;
	// “Ù∆µ
	chip_bd3702.SaveStatus2();
	chip_bd3702.InputGain(0, 0);
	return chip_bd3702.InputSelect(BD3702::MODE_E2);
	return ret;	
}

BOOL AuxAudio()
{
	chip_bd3702.InputGain(0, 0);
	chip_bd3702.InputSelect(BD3702::MODE_C);
	chip_bd3702.SaveStatus2();
	return 1;
}
BOOL AuxAVSelect()
{
	BOOL ret = TRUE;
	// “Ù∆µ
	chip_bd3702.InputGain(0, 0);
	ret &= chip_bd3702.InputSelect(BD3702::MODE_C);
	chip_bd3702.SaveStatus2();
	//  ”∆µ
	ret &= chip_fms6502.Output3Select(FMS6502::INPUT_8);
	return ret;
}

BOOL TVAudio()
{
	chip_bd3702.InputGain(0, 0);
	chip_njw2753.OutputSelect(NJW2753::INPUT_2);
	chip_bd3702.InputSelect(BD3702::MODE_A);
	chip_bd3702.SaveStatus2();
	return 1;
}
BOOL TVAVSelect()
{
	BOOL ret = TRUE;
	// “Ù∆µ
	chip_bd3702.InputGain(0, 0);
	chip_njw2753.OutputSelect(NJW2753::INPUT_2);
	ret &= chip_bd3702.InputSelect(BD3702::MODE_A);
	chip_bd3702.SaveStatus2();
	//  ”∆µ
	ret &= chip_fms6502.Output3Select(FMS6502::INPUT_3);
	return ret;
}

BOOL AudioToWince()
{
	chip_bd3702.RestoreStatus();
	chip_njw2753.RestoreStatus();
	return 1;
}

BOOL AndroidASelect()
{
	BOOL ret = TRUE;
	// “Ù∆µ
	chip_bd3702.SaveStatus();
	chip_njw2753.SaveStatus();
	chip_bd3702.InputGain(0, 0);
	chip_njw2753.OutputSelect(NJW2753::INPUT_3);
	ret &= chip_bd3702.InputSelect(BD3702::MODE_A);
	return ret;	
}

BOOL IpodAudio()
{
	chip_bd3702.InputGain(0, 0);
	chip_bd3702.InputSelect(BD3702::MODE_D);
	chip_bd3702.SaveStatus2();
	return 1;
}
BOOL IpodAVSelect()
{
	BOOL ret = TRUE;
	// “Ù∆µ
	chip_bd3702.InputGain(0, 0);
	ret &= chip_bd3702.InputSelect(BD3702::MODE_D);
	//  ”∆µ
	ret &= chip_fms6502.Output3Select(FMS6502::INPUT_2);
	chip_bd3702.SaveStatus2();
	return ret;
}

BOOL BackFromPhone()
{
	BOOL ret = TRUE;
	// “Ù∆µ
	chip_bd3702.RestoreStatus();
	chip_njw2753.RestoreStatus();
	return ret;	
}

BOOL BackFromNavi()
{
	BOOL ret = TRUE;
	// “Ù∆µ
	chip_bd3702.RestoreStatus2();
	return ret;	
}

BOOL SetTreble(int trebel)
{
	// Œ™¡ÀºÊ»›“‘«∞∑∂ŒßŒ™-7µΩ7
	if (trebel < 0)
	{
		return chip_bd3702.TrebelGain(-trebel, BD3702::BMT_CUT);
	}
	return chip_bd3702.TrebelGain(trebel);
}

BOOL SetMiddle(int midd)
{
	// Œ™¡ÀºÊ»›“‘«∞∑∂ŒßŒ™-7µΩ7
	if (midd < 0)
	{
		return chip_bd3702.MiddGain(-midd, BD3702::BMT_CUT);
	}
	return chip_bd3702.MiddGain(midd);
}

BOOL SetBass(int bass)
{
	// Œ™¡ÀºÊ»›“‘«∞∑∂ŒßŒ™-7µΩ7
	if (bass < 0)
	{
		return chip_bd3702.BassGain(-bass, BD3702::BMT_CUT);
	}
	return chip_bd3702.BassGain(bass);
}

BOOL SetLoudness(int lound)
{
	if (lound)
	{
		chip_bd3702.Loudness(BD3702::LOUDHICUT1, 20);
	}
	else
	{
		chip_bd3702.Loudness(BD3702::LOUDHICUT1, 0);
	}
	return 0;
}

BOOL SetSubwOn(int lound)
{
	chip_bd3702.SubwOn(lound);
	return 0;
}

BOOL SystemMute(BOOL b)
{
	AMP::SetMute(b);
	return chip_mcu.AMPMute(b);
}

BYTE *cvbs_pal0;
BYTE *cvbs_pal1;
BYTE *cvbs_pal2;
BYTE *cvbs_ntsc0;
BYTE *cvbs_ntsc1;
BYTE *cvbs_ntsc2;
BYTE *yc_ntsc0;
BYTE *yc_ntsc1;
BYTE *yc_ntsc2;
BYTE *cvbs_secam50;
BYTE *cvbs_secam52;
BYTE *cvbs_secam54;
BYTE *rgb0;
BYTE *rgb2;
BYTE *pcGm;

//#define TIANMA
//#define LAOTOU
//#define HANCAI
//#ifdef TIANMA
static const BYTE cvbs_pal0_Tianma[]=
{
	0x00,0x00,0x00,0x00,0x2F,0x00,0x00,0xFF,0xFF,0xFF,0x60,0x60,0x60,0x28,0xEF,0x00,
	0x58,0x06,0x06,0x2A,0xDC,0x5A,0xD3,0xC7,0x01,0x00,0x87,0x00,0xD0,0x00,0xFF,0x03,
	0x18,0x64,0x00,0x00,0x00,0x00,0x04,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x42,0x00,0x7C,0xBF,0x00,0xBC,0xBC,0x40,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,
	0xC2,0x39,0x00,0x01,0x00,0x10,0x01,0x00,0xD0,0x02,0xE0,0x01,0x10,0x00,0x05,0x00,
	0x00,0x00,0x00,0x00,0xC5,0x02,0x20,0x01,0x01,0xD8,0x38,0x01,0x02,0x00,0x01,0x00,
	0x01,0x08,0x18,0x0F,0x05,0x08,0x88,0x1E,0x80,0x80,0x00,0x7F,0x80,0x00,0x10,0x00,
	0x20,0x00,0xCC,0x1B,0x80,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x80,0x80,
	0x00,0x30,0x9E,0x00,0x49,0x27,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x07,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0xF0,0x00,0x00,0xFF,
	0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
	0x20,0x00,0x17,0x00,0x20,0x03,0x40,0x02,0xB3,0x05,0x05,0x02,0x20,0x00,0x0D,0x00,
	0x81,0x08,0x00,0x00,0x00,0x60,0x05,0x00,0x2D,0x02,0x02,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x03,0x20,0x02,
	0xF1,0x60,0x00,0x00,0x00,0x00,0x07,0x80,0x07,0x80,0x07,0x80,0xC0,0x80,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,
};

static const BYTE cvbs_pal1_Tianma[]=
{
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x20,0x67,0x55,0x03,0x10,0xB3,0x05,0x00,0x03,0x20,0x00,0x04,0x18,0x02,0x00,0x00,
	0x00,0x0F,0x00,0x0F,0x00,0x00,0x20,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x95,0x00,0xCC,0x95,0x32,0x68,0x95,0x81,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x80,0x00,
	0x30,0x00,0x10,0x01,0x01,0x00,0x00,0xD0,0x02,0x00,0x00,0xF0,0x00,0x00,0x02,0x4C,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,

};

static const BYTE cvbs_pal2_Tianma[]=
{
	0x32,0x09,0x4B,0x00,0xD8,0x32,0x0A,0x21,0x60,0x30,0x70,0x00,0x8A,0x07,0x00,0x0C,
	0x0A,0xB9,0x06,0x82,0x40,0x64,0x74,0xCB,0x2A,0x09,0x8A,0xCB,0x20,0x00,0x00,0x00,
	0x3B,0x3E,0x00,0x80,0xE9,0x0F,0x2D,0x50,0x22,0x4E,0xD6,0x4E,0x23,0x64,0x88,0x45,
	0x2E,0xC1,0x70,0x0E,0x6C,0x90,0x70,0x0E,0x00,0x0A,0x0E,0x00,0x05,0x00,0x00,0x00,
	0x04,0xE7,0x96,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x02,0x6B,0x40,0x12,0xDB,0x15,0x9A,0x0E,0x48,
	0x35,0x00,0x00,0x00,0x00,0x00,0x05,0x2B,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x1F,0xFF,0xDF,0xA0,0x2A,0x09,0x5F,0xE5,0x44,0xD1,0xA2,0x01,0x47,0xFE,0x00,0x00,
	0x04,0x00,0x72,0x00,0x07,0x20,0x03,0x10,0x00,0x00,0x0A,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

};
static const unsigned char rgb0_Tianma[] = 
{
	0x00,0x00,0x00,0x00,0x2F,0x00,0x00,0xFF,0xFF,0xFF,0x60,0x60,0x60,0x28,0xFF,0x00,
	0x58,0x06,0x06,0x2A,0xDC,0x5A,0xD3,0xC7,0x01,0x00,0x87,0x00,0xD0,0x00,0xFF,0x03,
	0x18,0x64,0x00,0x00,0x00,0x00,0x04,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x42,0x60,0x3F,0xBF,0x00,0xBC,0xBC,0x40,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,
	0xC2,0x39,0x00,0x01,0x00,0x10,0x01,0x00,0xD0,0x02,0xE0,0x01,0x10,0x00,0x05,0x00,
	0x00,0x00,0x00,0x00,0x20,0x03,0xE0,0x01,0xF3,0x71,0xED,0x01,0x10,0x00,0x00,0x00,
	0x01,0x08,0x18,0x0F,0x05,0x08,0x88,0x1E,0x80,0x80,0x00,0x7F,0x80,0x00,0x10,0x00,
	0x20,0x00,0x00,0x20,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x80,0x80,
	0x00,0x43,0x2E,0x00,0x49,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x05,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0xF0,0x00,0x00,0xFF,
	0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
	0xA0,0x00,0x05,0x00,0x20,0x03,0x40,0x02,0xB3,0x06,0x05,0x02,0x33,0x00,0x04,0x00,
	0x81,0x08,0x00,0x00,0x00,0x60,0x05,0x00,0x1C,0x00,0x02,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x03,0x20,0x02,
	0xF1,0x60,0x00,0x00,0x00,0x00,0x07,0x80,0x07,0x80,0x07,0x80,0xC0,0xB0,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,
};

static const unsigned char rgb2_Tianma[] = 
{
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x20,0x67,0x55,0x05,0x10,0xB3,0x05,0x00,0x03,0x20,0x00,0x00,0x18,0x02,0x00,0x00,
	0x00,0x0F,0x00,0x0F,0x00,0x00,0x20,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x95,0x00,0xCC,0x95,0x32,0x68,0x95,0x81,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x80,0x00,
	0x01,0x00,0x10,0x01,0x01,0x0D,0x00,0x20,0x03,0x06,0x00,0xE0,0x01,0x00,0x02,0x4C,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,
};

static const BYTE cvbs_ntsc0_Tianma[]=
{
	0x00,0x00,0x00,0x00,0x2F,0x00,0x00,0xFF,0xFF,0xFF,0x60,0x60,0x60,0x28,0xCF,0x00,
	0x58,0x06,0x06,0x2A,0xDC,0x5A,0xD3,0xC7,0x01,0x00,0x87,0x00,0xD0,0x00,0xFF,0x03,
	0x18,0x64,0x00,0x00,0x00,0x00,0x04,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x42,0x00,0x7C,0xBF,0x00,0xBC,0xBC,0x40,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,
	0xC2,0x39,0x00,0x01,0x00,0x10,0x01,0x00,0xD0,0x02,0xE0,0x01,0x10,0x00,0x05,0x00,
	0x00,0x00,0x00,0x00,0xC5,0x02,0x20,0x01,0x81,0xD6,0x06,0x01,0x02,0x00,0x01,0x00,
	0x01,0x08,0x18,0x0F,0x05,0x08,0x88,0x1E,0x80,0x80,0x00,0x7F,0x80,0x00,0x10,0x00,
	0x20,0x00,0xCC,0x1B,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x80,0x80,
	0x00,0x00,0x00,0x00,0x49,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x07,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0xF0,0x00,0x00,0xFF,
	0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
	0x20,0x00,0x22,0x00,0x20,0x03,0x40,0x02,0xB3,0x05,0x05,0x02,0x20,0x00,0x04,0x00,
	0x81,0x08,0x00,0x00,0x00,0x60,0x05,0x00,0x35,0x02,0x02,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x03,0x20,0x02,
	0xF1,0x60,0x00,0x00,0x00,0x00,0x07,0x80,0x07,0x80,0x07,0x80,0xC0,0x80,0x00,0x00,

};
static const BYTE cvbs_ntsc1_Tianma[]=
{
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x20,0x67,0x55,0x03,0x10,0xB3,0x05,0x00,0x03,0x20,0x00,0x00,0x18,0x02,0x00,0x00,
	0x00,0x0F,0x00,0x0F,0x00,0x00,0x20,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x95,0x00,0xCC,0x95,0x32,0x68,0x95,0x81,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x80,0x00,
	0x30,0x00,0x10,0x01,0x01,0x00,0x00,0xD0,0x02,0x00,0x00,0xF0,0x00,0x00,0x02,0x4C,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,
};
static const BYTE cvbs_ntsc2_Tianma[]=
{
	0x00,0x09,0x4B,0x00,0xDD,0x32,0x0A,0x21,0x60,0x30,0x90,0x00,0x7A,0x07,0x00,0x0C,
	0x0A,0xB9,0x06,0x82,0x40,0x64,0x74,0xDD,0x21,0xF0,0x7C,0x1F,0x20,0x00,0x00,0x00,
	0x36,0x3E,0x00,0x80,0xE9,0x0F,0x2D,0x50,0x22,0x4E,0xD6,0x4E,0x23,0x64,0x94,0x45,
	0x22,0xC1,0x70,0x0E,0x6C,0x90,0x70,0x0E,0x00,0x0A,0x0E,0x00,0x00,0x00,0x00,0x00,
	0x04,0xE7,0x96,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x02,0x6B,0x40,0x12,0xDB,0x15,0x9A,0x0E,0x48,
	0x35,0x00,0x00,0x00,0x00,0x00,0x05,0x2B,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x1F,0xFF,0xF3,0x60,0x21,0xF0,0x54,0xF2,0x4B,0xF7,0x65,0x00,0xE4,0xFE,0x00,0x01,
	0x04,0x00,0x72,0x00,0x07,0x20,0x03,0x10,0x00,0x00,0x0A,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

static const BYTE yc_ntsc0_Tianma[]=
{
	0x00,0x00,0x00,0x00,0x2F,0x00,0x00,0xFF,0xFF,0xFF,0x60,0x60,0x60,0x28,0xB3,0x00,
	0x58,0x04,0x06,0x2A,0xDC,0x5A,0xD3,0xC7,0x16,0x06,0x87,0x00,0xD0,0x00,0xFF,0x03,
	0x18,0x64,0x00,0x00,0x00,0x00,0x04,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x42,0x00,0x7F,0xBF,0x00,0xBC,0xBC,0x40,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,
	0xC2,0x39,0x00,0x01,0x00,0x10,0x01,0x00,0xD0,0x02,0xE0,0x01,0x10,0x00,0x05,0x00,
	0x00,0x00,0x00,0x00,0xC5,0x02,0x20,0x01,0x80,0xD6,0x06,0x01,0x02,0x00,0x01,0x00,
	0x01,0x08,0x18,0x0F,0x05,0x08,0x88,0x1E,0x80,0x80,0x00,0x7F,0x80,0x00,0x10,0x00,
	0x20,0x00,0xCC,0x1B,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x80,0x80,
	0x00,0x00,0x00,0x00,0x49,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x02,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0xF0,0x00,0x00,0xFF,
	0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
	0x20,0x00,0x22,0x00,0x20,0x03,0x40,0x02,0xB3,0x05,0x05,0x02,0x20,0x00,0x04,0x00,
	0x81,0x08,0x00,0x00,0x00,0x60,0x05,0x00,0x35,0x02,0x02,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x03,0x20,0x02,
	0xF1,0x60,0x00,0x00,0x00,0x00,0x07,0x80,0x07,0x80,0x07,0x80,0xC0,0x80,0x00,0x00,
};
static const BYTE yc_ntsc1_Tianma[]=
{
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x20,0x67,0x55,0x03,0x10,0xB3,0x05,0x00,0x03,0x20,0x00,0x00,0x18,0x02,0x00,0x00,
	0x00,0x0F,0x00,0x0F,0x00,0x00,0x20,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x95,0x00,0xCC,0x95,0x32,0x68,0x95,0x81,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x80,0x00,
	0x30,0x00,0x10,0x01,0x01,0x00,0x00,0xD0,0x02,0x00,0x00,0xF0,0x00,0x00,0x02,0x4C,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,

};
static const BYTE yc_ntsc2_Tianma[]=
{
	0x01,0x09,0x4B,0x03,0xDD,0x32,0x0A,0x26,0x60,0x20,0x90,0x00,0x7A,0x07,0x00,0x0C,
	0x0A,0xB9,0x06,0x82,0x40,0x64,0x74,0xDD,0x21,0xF0,0x7C,0x1F,0x20,0x00,0x00,0x00,
	0x36,0x3E,0x00,0x80,0xE9,0x0F,0x2D,0x50,0x22,0x4E,0xD6,0x4E,0x23,0x64,0x94,0x45,
	0x22,0xC1,0x70,0x0E,0x6C,0x90,0x70,0x0E,0x00,0x0A,0x0E,0x00,0x00,0x00,0x00,0x00,
	0x04,0xE7,0x96,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x02,0x6B,0x40,0x12,0xDB,0x15,0x9A,0x0E,0x48,
	0x35,0x00,0x00,0x00,0x00,0x00,0x05,0x2B,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x20,0x00,0x0F,0x80,0x21,0xF0,0x8C,0x5A,0x53,0xC5,0x65,0x00,0xE8,0xFF,0x00,0x00,
	0x04,0x00,0x72,0x00,0x07,0x20,0x03,0x10,0x00,0x00,0x0A,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

static const BYTE cvbs_secam50_Tianma[] = 
{
	0x00,0x00,0x00,0x00,0x2F,0x00,0x00,0xFF,0xFF,0xFF,0x60,0x60,0x60,0x28,0xFF,0x00,
	0x58,0x06,0x06,0x2A,0xDC,0x5A,0xD3,0xC7,0x01,0x00,0x87,0x00,0xD0,0x00,0xFF,0x03,
	0x18,0x64,0x00,0x00,0x00,0x00,0x04,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x42,0x00,0x7F,0xBF,0x00,0xBC,0xBC,0x40,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,
	0xC2,0x39,0x00,0x01,0x00,0x10,0x01,0x00,0xD0,0x02,0xE0,0x01,0x10,0x00,0x05,0x00,
	0x00,0x00,0x00,0x00,0xC5,0x02,0x20,0x01,0x01,0xD8,0x38,0x01,0x02,0x00,0x01,0x00,
	0x01,0x08,0x18,0x0F,0x05,0x08,0x88,0x1E,0x80,0x80,0x00,0x65,0x80,0x00,0x10,0x00,
	0x20,0x00,0x50,0x1B,0xB3,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x80,0x80,
	0x00,0x47,0x9E,0x00,0x49,0x23,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0xF0,0x00,0x00,0xFF,
	0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
	0x3D,0x00,0x17,0x00,0x80,0x03,0x40,0x02,0x6C,0x04,0x05,0x02,0x20,0x00,0x0D,0x00,
	0x85,0x08,0x00,0x00,0x00,0x60,0x05,0x00,0x22,0x02,0x02,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x03,0x20,0x02,
	0xF1,0x60,0x00,0x00,0x00,0x00,0x07,0x80,0x07,0x80,0x07,0x80,0xC0,0x30,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,
};

static const BYTE cvbs_secam52_Tianma[] = 
{
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x20,0x67,0x55,0x03,0x10,0xB3,0x05,0x00,0x03,0x20,0x00,0x00,0x18,0x02,0x00,0x00,
	0x00,0x0F,0x00,0x0F,0x00,0x00,0x20,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x95,0x00,0xCC,0x95,0x32,0x68,0x95,0x81,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x80,0x00,
	0x01,0x00,0x10,0x01,0x01,0x5A,0x00,0x20,0x03,0x1F,0x00,0xE0,0x01,0x00,0x02,0x4C,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,
};

static const BYTE cvbs_secam54_Tianma[] = 
{
	0x38,0x09,0x4B,0x00,0xD8,0x32,0x0A,0x20,0x60,0x30,0x78,0x00,0x00,0x07,0x00,0x0C,
	0x0A,0xB9,0x06,0x82,0x40,0x64,0x74,0xCB,0x28,0xFF,0x3B,0xB2,0x20,0x00,0x00,0x00,
	0x3B,0x3E,0x00,0x80,0xE9,0x0F,0x2D,0x50,0x22,0x4E,0xD6,0x4E,0x23,0x64,0x9A,0x45,
	0x2E,0xC1,0x70,0x0E,0x6C,0x90,0x70,0x0E,0x00,0x0A,0x0E,0x00,0x04,0x00,0x00,0x00,
	0x04,0xE7,0x96,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x02,0x6B,0x40,0x12,0xDB,0x15,0x9A,0x0E,0x48,
	0x35,0x00,0x00,0x00,0x00,0x00,0x05,0x2B,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x20,0xFF,0xEB,0x00,0x28,0xFF,0x3B,0xB2,0x3F,0xCB,0x64,0x00,0x3F,0xFD,0x00,0x01,
	0x04,0x00,0x72,0x00,0x07,0x20,0x03,0x10,0x00,0x00,0x0A,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

static const BYTE pcGm_Tianma[] = 
{
	0x02,   0x02,   0x02,
	0x02,   0x02,   0x02,
	0x03,   0x03,   0x03,
	0x03,   0x03,   0x03,
	0x04,   0x04,   0x04,
	0x04,   0x04,   0x04,
	0x05,   0x05,   0x05,
	0x05,   0x05,   0x05,
	0x06,   0x06,   0x06,
	0x06,   0x06,   0x06,
	0x07,   0x07,   0x07,
	0x07,   0x07,   0x07,
	0x08,   0x08,   0x08,
	0x08,   0x08,   0x08,
	0x09,   0x09,   0x09,
	0x09,   0x09,   0x09,
	0x0A,   0x0A,   0x0A,
	0x0A,   0x0A,   0x0A,
	0x0B,   0x0B,   0x0B,
	0x0B,   0x0B,   0x0B,
	0x0C,   0x0C,   0x0C,
	0x0D,   0x0D,   0x0D,
	0x0D,   0x0D,   0x0D,
	0x0E,   0x0E,   0x0E,
	0x0F,   0x0F,   0x0F,
	0x0F,   0x0F,   0x0F,
	0x10,   0x10,   0x10,
	0x11,   0x11,   0x11,
	0x11,   0x11,   0x11,
	0x12,   0x12,   0x12,
	0x13,   0x13,   0x13,
	0x13,   0x13,   0x13,
	0x14,   0x14,   0x14,
	0x15,   0x15,   0x15,
	0x16,   0x16,   0x16,
	0x16,   0x16,   0x16,
	0x17,   0x17,   0x17,
	0x18,   0x18,   0x18,
	0x19,   0x19,   0x19,
	0x1A,   0x1A,   0x1A,
	0x1A,   0x1A,   0x1A,
	0x1B,   0x1B,   0x1B,
	0x1C,   0x1C,   0x1C,
	0x1D,   0x1D,   0x1D,
	0x1E,   0x1E,   0x1E,
	0x1F,   0x1F,   0x1F,
	0x1F,   0x1F,   0x1F,
	0x20,   0x20,   0x20,
	0x21,   0x21,   0x21,
	0x22,   0x22,   0x22,
	0x23,   0x23,   0x23,
	0x24,   0x24,   0x24,
	0x25,   0x25,   0x25,
	0x26,   0x26,   0x26,
	0x27,   0x27,   0x27,
	0x28,   0x28,   0x28,
	0x29,   0x29,   0x29,
	0x2A,   0x2A,   0x2A,
	0x2B,   0x2B,   0x2B,
	0x2C,   0x2C,   0x2C,
	0x2D,   0x2D,   0x2D,
	0x2E,   0x2E,   0x2E,
	0x2F,   0x2F,   0x2F,
	0x30,   0x30,   0x30,
	0x31,   0x31,   0x31,
	0x32,   0x32,   0x32,
	0x33,   0x33,   0x33,
	0x34,   0x34,   0x34,
	0x35,   0x35,   0x35,
	0x36,   0x36,   0x36,
	0x38,   0x38,   0x38,
	0x39,   0x39,   0x39,
	0x3A,   0x3A,   0x3A,
	0x3B,   0x3B,   0x3B,
	0x3C,   0x3C,   0x3C,
	0x3D,   0x3D,   0x3D,
	0x3F,   0x3F,   0x3F,
	0x40,   0x40,   0x40,
	0x41,   0x41,   0x41,
	0x42,   0x42,   0x42,
	0x43,   0x43,   0x43,
	0x45,   0x45,   0x45,
	0x46,   0x46,   0x46,
	0x47,   0x47,   0x47,
	0x49,   0x49,   0x49,
	0x4A,   0x4A,   0x4A,
	0x4B,   0x4B,   0x4B,
	0x4C,   0x4C,   0x4C,
	0x4E,   0x4E,   0x4E,
	0x4F,   0x4F,   0x4F,
	0x50,   0x50,   0x50,
	0x52,   0x52,   0x52,
	0x53,   0x53,   0x53,
	0x54,   0x54,   0x54,
	0x56,   0x56,   0x56,
	0x57,   0x57,   0x57,
	0x59,   0x59,   0x59,
	0x5A,   0x5A,   0x5A,
	0x5B,   0x5B,   0x5B,
	0x5D,   0x5D,   0x5D,
	0x5E,   0x5E,   0x5E,
	0x60,   0x60,   0x60,
	0x61,   0x61,   0x61,
	0x63,   0x63,   0x63,
	0x64,   0x64,   0x64,
	0x66,   0x66,   0x66,
	0x67,   0x67,   0x67,
	0x69,   0x69,   0x69,
	0x6A,   0x6A,   0x6A,
	0x6C,   0x6C,   0x6C,
	0x6D,   0x6D,   0x6D,
	0x6F,   0x6F,   0x6F,
	0x70,   0x70,   0x70,
	0x72,   0x72,   0x72,
	0x74,   0x74,   0x74,
	0x75,   0x75,   0x75,
	0x77,   0x77,   0x77,
	0x78,   0x78,   0x78,
	0x7A,   0x7A,   0x7A,
	0x7C,   0x7C,   0x7C,
	0x7D,   0x7D,   0x7D,
	0x7F,   0x7F,   0x7F,
	0x81,   0x81,   0x81,
	0x82,   0x82,   0x82,
	0x84,   0x84,   0x84,
	0x86,   0x86,   0x86,
	0x88,   0x88,   0x88,
	0x89,   0x89,   0x89,
	0x8B,   0x8B,   0x8B,
	0x8D,   0x8D,   0x8D,
	0x8E,   0x8E,   0x8E,
	0x90,   0x90,   0x90,
	0x91,   0x91,   0x91,
	0x93,   0x93,   0x93,
	0x95,   0x95,   0x95,
	0x96,   0x96,   0x96,
	0x98,   0x98,   0x98,
	0x99,   0x99,   0x99,
	0x9B,   0x9B,   0x9B,
	0x9C,   0x9C,   0x9C,
	0x9E,   0x9E,   0x9E,
	0x9F,   0x9F,   0x9F,
	0xA1,   0xA1,   0xA1,
	0xA2,   0xA2,   0xA2,
	0xA4,   0xA4,   0xA4,
	0xA5,   0xA5,   0xA5,
	0xA6,   0xA6,   0xA6,
	0xA8,   0xA8,   0xA8,
	0xA9,   0xA9,   0xA9,
	0xAB,   0xAB,   0xAB,
	0xAC,   0xAC,   0xAC,
	0xAD,   0xAD,   0xAD,
	0xAF,   0xAF,   0xAF,
	0xB0,   0xB0,   0xB0,
	0xB1,   0xB1,   0xB1,
	0xB3,   0xB3,   0xB3,
	0xB4,   0xB4,   0xB4,
	0xB5,   0xB5,   0xB5,
	0xB7,   0xB7,   0xB7,
	0xB8,   0xB8,   0xB8,
	0xB9,   0xB9,   0xB9,
	0xBB,   0xBB,   0xBB,
	0xBC,   0xBC,   0xBC,
	0xBD,   0xBD,   0xBD,
	0xBE,   0xBE,   0xBE,
	0xBF,   0xBF,   0xBF,
	0xC1,   0xC1,   0xC1,
	0xC2,   0xC2,   0xC2,
	0xC3,   0xC3,   0xC3,
	0xC4,   0xC4,   0xC4,
	0xC5,   0xC5,   0xC5,
	0xC6,   0xC6,   0xC6,
	0xC8,   0xC8,   0xC8,
	0xC9,   0xC9,   0xC9,
	0xCA,   0xCA,   0xCA,
	0xCB,   0xCB,   0xCB,
	0xCC,   0xCC,   0xCC,
	0xCD,   0xCD,   0xCD,
	0xCE,   0xCE,   0xCE,
	0xCF,   0xCF,   0xCF,
	0xD0,   0xD0,   0xD0,
	0xD1,   0xD1,   0xD1,
	0xD2,   0xD2,   0xD2,
	0xD3,   0xD3,   0xD3,
	0xD4,   0xD4,   0xD4,
	0xD5,   0xD5,   0xD5,
	0xD6,   0xD6,   0xD6,
	0xD7,   0xD7,   0xD7,
	0xD8,   0xD8,   0xD8,
	0xD9,   0xD9,   0xD9,
	0xDA,   0xDA,   0xDA,
	0xDB,   0xDB,   0xDB,
	0xDC,   0xDC,   0xDC,
	0xDD,   0xDD,   0xDD,
	0xDE,   0xDE,   0xDE,
	0xDF,   0xDF,   0xDF,
	0xE0,   0xE0,   0xE0,
	0xE0,   0xE0,   0xE0,
	0xE1,   0xE1,   0xE1,
	0xE2,   0xE2,   0xE2,
	0xE3,   0xE3,   0xE3,
	0xE4,   0xE4,   0xE4,
	0xE5,   0xE5,   0xE5,
	0xE5,   0xE5,   0xE5,
	0xE6,   0xE6,   0xE6,
	0xE7,   0xE7,   0xE7,
	0xE8,   0xE8,   0xE8,
	0xE8,   0xE8,   0xE8,
	0xE9,   0xE9,   0xE9,
	0xEA,   0xEA,   0xEA,
	0xEA,   0xEA,   0xEA,
	0xEB,   0xEB,   0xEB,
	0xEC,   0xEC,   0xEC,
	0xED,   0xED,   0xED,
	0xED,   0xED,   0xED,
	0xEE,   0xEE,   0xEE,
	0xEF,   0xEF,   0xEF,
	0xEF,   0xEF,   0xEF,
	0xF0,   0xF0,   0xF0,
	0xF0,   0xF0,   0xF0,
	0xF1,   0xF1,   0xF1,
	0xF2,   0xF2,   0xF2,
	0xF2,   0xF2,   0xF2,
	0xF3,   0xF3,   0xF3,
	0xF3,   0xF3,   0xF3,
	0xF4,   0xF4,   0xF4,
	0xF4,   0xF4,   0xF4,
	0xF5,   0xF5,   0xF5,
	0xF5,   0xF5,   0xF5,
	0xF6,   0xF6,   0xF6,
	0xF6,   0xF6,   0xF6,
	0xF7,   0xF7,   0xF7,
	0xF7,   0xF7,   0xF7,
	0xF8,   0xF8,   0xF8,
	0xF8,   0xF8,   0xF8,
	0xF9,   0xF9,   0xF9,
	0xF9,   0xF9,   0xF9,
	0xF9,   0xF9,   0xF9,
	0xFA,   0xFA,   0xFA,
	0xFA,   0xFA,   0xFA,
	0xFB,   0xFB,   0xFB,
	0xFB,   0xFB,   0xFB,
	0xFB,   0xFB,   0xFB,
	0xFC,   0xFC,   0xFC,
	0xFC,   0xFC,   0xFC,
	0xFC,   0xFC,   0xFC,
	0xFD,   0xFD,   0xFD,
	0xFD,   0xFD,   0xFD,
	0xFD,   0xFD,   0xFD,
	0xFD,   0xFD,   0xFD,
	0xFE,   0xFE,   0xFE,
	0xFE,   0xFE,   0xFE,
	0xFE,   0xFE,   0xFE,
	0xFE,   0xFE,   0xFE,
	0xFF,   0xFF,   0xFF,
	0xFF,   0xFF,   0xFF,
};
//#endif

//#ifdef HANCAI
static const BYTE cvbs_pal0_Hancai[]=
{
	0x00,0x00,0x00,0x00,0x2F,0x00,0x00,0xFF,0xFF,0xFF,0x60,0x60,0x60,0x28,0x7F,0x00,
	0x58,0x06,0x06,0x2A,0xDC,0x5A,0xD3,0xC7,0x01,0x00,0x87,0x00,0xD0,0x00,0xFF,0x03,
	0x18,0x64,0x00,0x00,0x00,0x00,0x04,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x42,0x00,0x7C,0xBF,0x00,0xBC,0xBC,0x40,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,
	0xC2,0x39,0x00,0x01,0x00,0x10,0x01,0x00,0xD0,0x02,0xE0,0x01,0x10,0x00,0x05,0x00,
	0x00,0x00,0x00,0x00,0xC5,0x02,0x20,0x01,0xF9,0xD7,0x39,0x01,0x02,0x00,0x01,0x00,
	0x01,0x08,0x18,0x0F,0x03,0x08,0x88,0x1E,0x90,0x90,0x00,0x7F,0x80,0x00,0x10,0x00,
	0x20,0x00,0x01,0x1B,0x80,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x80,0x80,
	0x00,0x35,0x9E,0x00,0x49,0x27,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x02,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0xF0,0x00,0x00,0xFF,
	0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
	0x3D,0x00,0x17,0x00,0x80,0x03,0x40,0x02,0x5D,0x04,0x05,0x02,0x20,0x00,0x0D,0x00,
	0x85,0x10,0x00,0x00,0x00,0x60,0x05,0x00,0x22,0x02,0x02,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x03,0x20,0x02,
	0xF0,0x60,0x00,0x00,0x00,0x00,0x07,0x80,0x07,0x80,0x07,0x80,0xC0,0x10,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,
};

static const BYTE cvbs_pal1_Hancai[]=
{
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x20,0x67,0x55,0x03,0x10,0xB3,0x05,0x00,0x03,0x20,0x00,0x04,0x18,0x02,0x00,0x00,
	0x00,0x0F,0x00,0x0F,0x00,0x00,0x20,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x95,0x00,0xCC,0x95,0x32,0x68,0x95,0x81,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x80,0x00,
	0x30,0x00,0x10,0x01,0x01,0x00,0x00,0xD0,0x02,0x00,0x00,0xF0,0x00,0x00,0x02,0x4C,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00

};

static const BYTE cvbs_pal2_Hancai[]=
{
	0x32,0x09,0x4B,0x00,0xD8,0x32,0x0A,0x20,0x80,0x30,0x80,0x00,0x72,0x07,0x00,0x0C,
	0x0A,0xB9,0x06,0x82,0x40,0x64,0x74,0xCB,0x2A,0x09,0x8A,0xCB,0x20,0x00,0x00,0x00,
	0x3B,0x3E,0x00,0x80,0xE9,0x0F,0x2D,0x50,0x22,0x4E,0xD6,0x4E,0x23,0x64,0x88,0x45,
	0x2E,0xC1,0x70,0x0E,0x6C,0x90,0x70,0x0E,0x00,0x0A,0x0E,0x01,0x15,0x00,0x00,0x00,
	0x04,0xE7,0x96,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x02,0x6B,0x40,0x12,0xDB,0x15,0x9A,0x0E,0x48,
	0x35,0x00,0x00,0x00,0x00,0x00,0x05,0x2B,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x20,0x01,0xC5,0x00,0x2A,0x08,0xB9,0xF7,0x65,0x00,0x83,0x02,0x13,0xFD,0x00,0x11,
	0x04,0x00,0x72,0x00,0x07,0x20,0x03,0x10,0x00,0x00,0x0A,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,


};
static const BYTE rgb0_Hancai[]=
{
	0x00,0x00,0x00,0x00,0x2F,0x00,0x00,0xFF,0xFF,0xFF,0x60,0x60,0x60,0x28,0x00,0x00,
	0x58,0x04,0x06,0x2A,0xDC,0x5A,0xD3,0xC7,0x01,0x00,0x87,0x00,0xD0,0x00,0xFF,0x03,
	0x18,0x64,0x00,0x00,0x00,0x00,0x04,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x42,0x60,0x3D,0xBF,0x00,0xBC,0xBC,0x40,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,
	0xC2,0x39,0x00,0x01,0x00,0x10,0x01,0x00,0xD0,0x02,0xE0,0x01,0x10,0x00,0x05,0x00,
	0x00,0x00,0x00,0x00,0x20,0x03,0xE0,0x01,0xA1,0x8B,0x10,0x02,0x10,0x00,0x00,0x00,
	0x01,0x08,0x18,0x0F,0x03,0x08,0x88,0x1E,0x80,0x80,0x00,0x7F,0x80,0x00,0x10,0x00,
	0x20,0x00,0x00,0x20,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x80,0x80,
	0x00,0x87,0xD1,0x00,0x49,0x4F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0xF0,0x00,0x00,0xFF,
	0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
	0x56,0x00,0x1E,0x00,0x20,0x03,0x40,0x02,0x62,0x04,0x05,0x02,0x33,0x00,0x00,0x00,
	0x85,0x10,0x00,0x00,0x00,0x60,0x05,0x00,0x0E,0x00,0x02,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x04,0x20,0x02,
	0xF0,0x60,0x00,0x00,0x00,0x00,0x07,0x80,0x07,0x80,0x07,0x80,0xC0,0x00,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,
};
static const BYTE rgb2_Hancai[]=
{
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x20,0x67,0x55,0x03,0x10,0xB3,0x05,0x00,0x03,0x20,0x00,0x00,0x18,0x02,0x00,0x00,
	0x00,0x0F,0x00,0x0F,0x00,0x00,0x20,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x95,0x0C,0xCC,0x95,0x32,0x68,0x95,0x81,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x80,0x00,
	0x01,0x00,0x10,0x01,0x01,0x58,0x00,0x20,0x03,0x1D,0x00,0xE0,0x01,0x00,0x02,0x4C,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,
};

static const BYTE cvbs_ntsc0_Hancai[]=
{
	0x00,0x00,0x00,0x00,0x2F,0x00,0x00,0xFF,0xFF,0xFF,0x60,0x60,0x60,0x28,0x00,0x00,
	0x58,0x06,0x06,0x2A,0xDC,0x5A,0xD3,0xC7,0x01,0x00,0x87,0x00,0xD0,0x00,0xFF,0x03,
	0x18,0x64,0x00,0x00,0x00,0x00,0x04,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x42,0x00,0x7C,0xBF,0x00,0xBC,0xBC,0x40,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,
	0xC2,0x39,0x00,0x01,0x00,0x10,0x01,0x00,0xD0,0x02,0xE0,0x01,0x10,0x00,0x05,0x00,
	0x00,0x00,0x00,0x00,0xC5,0x02,0x20,0x01,0x7F,0xD6,0x06,0x01,0x02,0x00,0x01,0x00,
	0x01,0x08,0x18,0x0F,0x03,0x08,0x88,0x1E,0x80,0x90,0x00,0x7F,0x80,0x00,0x10,0x00,
	0x20,0x00,0x01,0x1B,0x80,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x80,0x80,
	0x00,0x00,0x00,0x00,0x49,0x2F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x02,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0xF0,0x00,0x00,0xFF,
	0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
	0x3D,0x00,0x17,0x00,0x80,0x03,0x40,0x02,0xE2,0x03,0x05,0x02,0x20,0x00,0x05,0x00,
	0x85,0x10,0x00,0x00,0x00,0x60,0x05,0x00,0x24,0x02,0x02,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x03,0x20,0x02,
	0xF0,0x60,0x00,0x00,0x00,0x00,0x07,0x80,0x07,0x80,0x07,0x80,0xC0,0x20,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,

};
static const BYTE cvbs_ntsc1_Hancai[]=
{
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x20,0x67,0x55,0x03,0x10,0xB3,0x05,0x00,0x03,0x20,0x00,0x00,0x18,0x02,0x00,0x00,
	0x00,0x0F,0x00,0x0F,0x00,0x00,0x20,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x95,0x00,0xCC,0x95,0x32,0x68,0x95,0x81,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x80,0x00,
	0x30,0x00,0x10,0x01,0x01,0x00,0x00,0xD0,0x02,0x00,0x00,0xF0,0x00,0x00,0x02,0x4C,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,

};
static const BYTE cvbs_ntsc2_Hancai[]=
{
	0x00,0x09,0x4B,0x00,0xD8,0x32,0x0A,0x20,0x60,0x30,0x80,0x00,0x72,0x07,0x00,0x0C,
	0x0A,0xB9,0x06,0x82,0x40,0x64,0x74,0xCB,0x21,0xF0,0x7C,0x0F,0x20,0x00,0x00,0x00,
	0x3B,0x3E,0x00,0x80,0xE9,0x0F,0x2D,0x50,0x22,0x4E,0xD6,0x4E,0x23,0x64,0x9c,0x3b,
	0x26,0xC1,0x70,0x0E,0x6C,0x90,0x70,0x0E,0x00,0x0A,0x0E,0x00,0x00,0x00,0x00,0x00,
	0x04,0xE7,0x96,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x02,0x6B,0x40,0x12,0xDB,0x15,0x9A,0x0E,0x48,
	0x35,0x00,0x00,0x00,0x00,0x00,0x05,0x2B,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x20,0x7F,0x5C,0x40,0x21,0xF0,0x86,0x7B,0x83,0x29,0x5F,0x00,0xF3,0xFE,0x00,0x07,
	0x04,0x00,0x72,0x00,0x07,0x20,0x03,0x10,0x00,0x00,0x0A,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

static const BYTE yc_ntsc0_Hancai[]=
{
	0x00,0x00,0x00,0x00,0x2F,0x00,0x00,0xFF,0xFF,0xFF,0x80,0x6C,0x80,0x28,0xFF,0x00,
	0x58,0x05,0x06,0x2A,0xDC,0x5A,0xD3,0xC7,0x14,0x06,0x87,0x00,0xF0,0x00,0xFF,0x03,
	0x80,0x04,0x00,0x00,0x00,0x00,0x04,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x03,0x00,0x70,0xB0,0x00,0xBC,0xBC,0x40,0x50,0x10,0x20,0x03,0x00,0x00,0x00,0x00,
	0x00,0x02,0x00,0x01,0x00,0x10,0x01,0x00,0xD0,0x02,0xE0,0x01,0x10,0x00,0x05,0x00,
	0x00,0x00,0x00,0x00,0xD0,0x02,0x20,0x01,0x80,0xD6,0x07,0x01,0x02,0x00,0x01,0x00,
	0x00,0x88,0x18,0x0F,0x03,0x08,0x88,0x1E,0x80,0x80,0x00,0x7F,0x80,0x00,0x10,0x00,
	0x20,0x00,0xA2,0x1C,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x80,0x80,
	0x00,0x00,0x00,0x00,0x49,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x02,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0xF0,0x00,0x00,0xFF,
	0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
	0x3F,0x00,0x10,0x00,0x1B,0x03,0x40,0x02,0x34,0x03,0x05,0x02,0x0A,0x00,0x08,0x00,
	0x85,0x10,0x00,0x00,0x00,0x60,0x05,0x00,0x0E,0x00,0x02,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x04,0x20,0x02,
	0xF0,0x60,0x00,0x00,0x00,0x00,0x07,0x80,0x07,0x80,0x07,0x80,0xC0,0x20,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,
};
static const BYTE yc_ntsc1_Hancai[]=
{
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x20,0x67,0x55,0x03,0x10,0xB3,0x05,0x00,0x03,0x20,0x00,0x00,0x18,0x02,0x00,0x00,
	0x00,0x0F,0x00,0x0F,0x00,0x00,0x20,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x95,0x0C,0xCC,0x95,0x32,0x68,0x95,0x81,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x80,0x00,
	0x01,0x00,0x10,0x01,0x01,0x58,0x00,0x20,0x03,0x1D,0x00,0xE0,0x01,0x00,0x02,0x4C,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,

};
static const BYTE yc_ntsc2_Hancai[]=
{
	0x20,0x46,0x4B,0x03,0xDD,0x32,0x0A,0x20,0x6D,0x15,0x86,0x00,0x8A,0x07,0x00,0x0C,
	0x0A,0xB9,0x06,0x82,0x40,0x64,0x74,0xCB,0x21,0xF0,0x7C,0x1F,0x20,0x00,0x00,0x00,
	0x36,0x3E,0x00,0x80,0xE9,0x0F,0x2D,0x50,0x22,0x4E,0xD6,0x4E,0x23,0x64,0x68,0x50,
	0x22,0xC1,0x70,0x0E,0x6C,0x90,0x70,0x0E,0x00,0x0A,0x0E,0x06,0x00,0x00,0x00,0x00,
	0x04,0xE7,0x96,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x02,0x6B,0x40,0x12,0xDB,0x15,0x9A,0x0E,0x48,
	0x35,0x00,0x00,0x00,0x00,0x00,0x05,0x2B,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x20,0x39,0xE8,0x00,0x21,0xF0,0x7C,0x1F,0x46,0x41,0xB2,0x3E,0x00,0x11,0x00,0x00,
	0x04,0x00,0x72,0x00,0x07,0x20,0x03,0x10,0x00,0x00,0x0A,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

//static const BYTE yc_ntsc0_Hancai[]=
//{
//	0x00,0x00,0x00,0x00,0x2F,0x00,0x00,0xFF,0xFF,0xFF,0x60,0x60,0x60,0x28,0xB3,0x00,
//	0x58,0x04,0x06,0x2A,0xDC,0x5A,0xD3,0xC7,0x16,0x06,0x87,0x00,0xD0,0x00,0xFF,0x03,
//	0x18,0x64,0x00,0x00,0x00,0x00,0x04,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x42,0x00,0x7F,0xBF,0x00,0xBC,0xBC,0x40,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,
//	0xC2,0x39,0x00,0x01,0x00,0x10,0x01,0x00,0xD0,0x02,0xE0,0x01,0x10,0x00,0x05,0x00,
//	0x00,0x00,0x00,0x00,0xC5,0x02,0x20,0x01,0x80,0xD6,0x06,0x01,0x02,0x00,0x01,0x00,
//	0x01,0x08,0x18,0x0F,0x05,0x08,0x88,0x1E,0x80,0x80,0x00,0x7F,0x80,0x00,0x10,0x00,
//	0x20,0x00,0xCC,0x1B,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x80,0x80,
//	0x00,0x00,0x00,0x00,0x49,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x02,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0xF0,0x00,0x00,0xFF,
//	0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
//	0x20,0x00,0x22,0x00,0x20,0x03,0x40,0x02,0xB3,0x05,0x05,0x02,0x20,0x00,0x04,0x00,
//	0x81,0x10,0x00,0x00,0x00,0x60,0x05,0x00,0x35,0x02,0x02,0x00,0x00,0x00,0x00,0x00,
//	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x03,0x20,0x02,
//	0xF0,0x60,0x00,0x00,0x00,0x00,0x07,0x80,0x07,0x80,0x07,0x80,0xC0,0x80,0x00,0x00,
//};
//static const BYTE yc_ntsc1_Hancai[]=
//{
//	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x20,0x67,0x55,0x03,0x10,0xB3,0x05,0x00,0x03,0x20,0x00,0x00,0x18,0x02,0x00,0x00,
//	0x00,0x0F,0x00,0x0F,0x00,0x00,0x20,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x95,0x00,0xCC,0x95,0x32,0x68,0x95,0x81,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x00,0x00,0x00,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x80,0x00,
//	0x30,0x00,0x10,0x01,0x01,0x00,0x00,0xD0,0x02,0x00,0x00,0xF0,0x00,0x00,0x02,0x4C,
//	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,
//
//};
//static const BYTE yc_ntsc2_Hancai[]=
//{
//	0x01,0x09,0x4B,0x03,0xDD,0x32,0x0A,0x26,0x60,0x20,0x90,0x00,0x7A,0x07,0x00,0x0C,
//	0x0A,0xB9,0x06,0x82,0x40,0x64,0x74,0xDD,0x21,0xF0,0x7C,0x1F,0x20,0x00,0x00,0x00,
//	0x36,0x3E,0x00,0x80,0xE9,0x0F,0x2D,0x50,0x22,0x4E,0xD6,0x4E,0x23,0x64,0x94,0x45,
//	0x22,0xC1,0x70,0x0E,0x6C,0x90,0x70,0x0E,0x00,0x0A,0x0E,0x00,0x00,0x00,0x00,0x00,
//	0x04,0xE7,0x96,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x02,0x6B,0x40,0x12,0xDB,0x15,0x9A,0x0E,0x48,
//	0x35,0x00,0x00,0x00,0x00,0x00,0x05,0x2B,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x20,0x00,0x0F,0x80,0x21,0xF0,0x8C,0x5A,0x53,0xC5,0x65,0x00,0xE8,0xFF,0x00,0x00,
//	0x04,0x00,0x72,0x00,0x07,0x20,0x03,0x10,0x00,0x00,0x0A,0x00,0x00,0x00,0x00,0x00,
//	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
//};
static const BYTE cvbs_secam50_Hancai[] = 
{
	0x00,0x00,0x00,0x00,0x2F,0x00,0x00,0xFF,0xFF,0xFF,0x60,0x60,0x60,0x28,0xFF,0x00,
	0x58,0x06,0x06,0x2A,0xDC,0x5A,0xD3,0xC7,0x01,0x00,0x87,0x00,0xD0,0x00,0xFF,0x03,
	0x18,0x64,0x00,0x00,0x00,0x00,0x04,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x42,0x00,0x7F,0xBF,0x00,0xBC,0xBC,0x40,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,
	0xC2,0x39,0x00,0x01,0x00,0x10,0x01,0x00,0xD0,0x02,0xE0,0x01,0x10,0x00,0x05,0x00,
	0x00,0x00,0x00,0x00,0xC5,0x02,0x20,0x01,0x01,0xD8,0x39,0x01,0x02,0x00,0x01,0x00,
	0x01,0x08,0x18,0x0F,0x03,0x08,0x88,0x1E,0x80,0x80,0x00,0x65,0x80,0x00,0x10,0x00,
	0x20,0x00,0x50,0x1B,0x80,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x80,0x80,
	0x00,0x24,0x9E,0x00,0x49,0x27,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0xF0,0x00,0x00,0xFF,
	0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
	0x3D,0x00,0x17,0x00,0x80,0x03,0x40,0x02,0x5D,0x04,0x05,0x02,0x20,0x00,0x0D,0x00,
	0x85,0x10,0x00,0x00,0x00,0x60,0x05,0x00,0x22,0x02,0x02,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x03,0x20,0x02,
	0xF0,0x60,0x00,0x00,0x00,0x00,0x07,0x80,0x07,0x80,0x07,0x80,0xC0,0x40,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,
};

static const BYTE cvbs_secam52_Hancai[] = 
{
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x20,0x67,0x55,0x03,0x10,0xB3,0x05,0x00,0x03,0x20,0x00,0x00,0x18,0x02,0x00,0x00,
	0x00,0x0F,0x00,0x0F,0x00,0x00,0x20,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x95,0x00,0xCC,0x95,0x32,0x68,0x95,0x81,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x80,0x00,
	0x01,0x00,0x10,0x01,0x01,0x5A,0x00,0x20,0x03,0x1F,0x00,0xE0,0x01,0x00,0x02,0x4C,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,
};

static const BYTE cvbs_secam54_Hancai[] = 
{
	0x38,0x09,0x4B,0x00,0xD8,0x32,0x0A,0x20,0x60,0x30,0x70,0x00,0x00,0x07,0x00,0x0C,
	0x0A,0xB9,0x06,0x82,0x40,0x64,0x74,0xCB,0x28,0xFF,0x3B,0xB2,0x20,0x00,0x00,0x00,
	0x3B,0x3E,0x00,0x80,0xE9,0x0F,0x2D,0x50,0x22,0x4E,0xD6,0x4E,0x23,0x64,0x88,0x45,
	0x2E,0xC1,0x70,0x0E,0x6C,0x90,0x70,0x0E,0x00,0x0A,0x0E,0x00,0x04,0x00,0x00,0x00,
	0x04,0xE7,0x96,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x02,0x6B,0x40,0x12,0xDB,0x15,0x9A,0x0E,0x48,
	0x35,0x00,0x00,0x00,0x00,0x00,0x05,0x2B,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x1F,0xFF,0xC8,0x00,0x29,0x01,0x3B,0xA2,0x40,0x10,0x6E,0x00,0x3F,0xFD,0x00,0x00,
	0x04,0x00,0x72,0x00,0x07,0x20,0x03,0x10,0x00,0x00,0x0A,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

static const BYTE pcGm_Hancai[] = 
{
	0x00   ,0x00   ,0x00,
	0x01   ,0x01   ,0x01,
	0x01   ,0x01   ,0x01,
	0x02   ,0x02   ,0x02,
	0x02   ,0x02   ,0x02,
	0x03   ,0x03   ,0x03,
	0x04   ,0x04   ,0x04,
	0x04   ,0x04   ,0x04,
	0x05   ,0x05   ,0x05,
	0x06   ,0x06   ,0x06,
	0x06   ,0x06   ,0x06,
	0x07   ,0x07   ,0x07,
	0x08   ,0x08   ,0x08,
	0x08   ,0x08   ,0x08,
	0x09   ,0x09   ,0x09,
	0x0A   ,0x0A   ,0x0A,
	0x0A   ,0x0A   ,0x0A,
	0x0B   ,0x0B   ,0x0B,
	0x0C   ,0x0C   ,0x0C,
	0x0C   ,0x0C   ,0x0C,
	0x0D   ,0x0D   ,0x0D,
	0x0E   ,0x0E   ,0x0E,
	0x0F   ,0x0F   ,0x0F,
	0x0F   ,0x0F   ,0x0F,
	0x10   ,0x10   ,0x10,
	0x11   ,0x11   ,0x11,
	0x12   ,0x12   ,0x12,
	0x12   ,0x12   ,0x12,
	0x13   ,0x13   ,0x13,
	0x14   ,0x14   ,0x14,
	0x15   ,0x15   ,0x15,
	0x15   ,0x15   ,0x15,
	0x16   ,0x16   ,0x16,
	0x17   ,0x17   ,0x17,
	0x18   ,0x18   ,0x18,
	0x19   ,0x19   ,0x19,
	0x19   ,0x19   ,0x19,
	0x1A   ,0x1A   ,0x1A,
	0x1B   ,0x1B   ,0x1B,
	0x1C   ,0x1C   ,0x1C,
	0x1D   ,0x1D   ,0x1D,
	0x1E   ,0x1E   ,0x1E,
	0x1F   ,0x1F   ,0x1F,
	0x1F   ,0x1F   ,0x1F,
	0x20   ,0x20   ,0x20,
	0x21   ,0x21   ,0x21,
	0x22   ,0x22   ,0x22,
	0x23   ,0x23   ,0x23,
	0x24   ,0x24   ,0x24,
	0x25   ,0x25   ,0x25,
	0x26   ,0x26   ,0x26,
	0x27   ,0x27   ,0x27,
	0x27   ,0x27   ,0x27,
	0x28   ,0x28   ,0x28,
	0x29   ,0x29   ,0x29,
	0x2A   ,0x2A   ,0x2A,
	0x2B   ,0x2B   ,0x2B,
	0x2C   ,0x2C   ,0x2C,
	0x2D   ,0x2D   ,0x2D,
	0x2E   ,0x2E   ,0x2E,
	0x2F   ,0x2F   ,0x2F,
	0x30   ,0x30   ,0x30,
	0x31   ,0x31   ,0x31,
	0x32   ,0x32   ,0x32,
	0x33   ,0x33   ,0x33,
	0x34   ,0x34   ,0x34,
	0x35   ,0x35   ,0x35,
	0x36   ,0x36   ,0x36,
	0x37   ,0x37   ,0x37,
	0x38   ,0x38   ,0x38,
	0x39   ,0x39   ,0x39,
	0x3A   ,0x3A   ,0x3A,
	0x3B   ,0x3B   ,0x3B,
	0x3C   ,0x3C   ,0x3C,
	0x3D   ,0x3D   ,0x3D,
	0x3E   ,0x3E   ,0x3E,
	0x3F   ,0x3F   ,0x3F,
	0x41   ,0x41   ,0x41,
	0x42   ,0x42   ,0x42,
	0x43   ,0x43   ,0x43,
	0x44   ,0x44   ,0x44,
	0x45   ,0x45   ,0x45,
	0x46   ,0x46   ,0x46,
	0x47   ,0x47   ,0x47,
	0x48   ,0x48   ,0x48,
	0x49   ,0x49   ,0x49,
	0x4B   ,0x4B   ,0x4B,
	0x4C   ,0x4C   ,0x4C,
	0x4D   ,0x4D   ,0x4D,
	0x4E   ,0x4E   ,0x4E,
	0x4F   ,0x4F   ,0x4F,
	0x50   ,0x50   ,0x50,
	0x51   ,0x51   ,0x51,
	0x53   ,0x53   ,0x53,
	0x54   ,0x54   ,0x54,
	0x55   ,0x55   ,0x55,
	0x56   ,0x56   ,0x56,
	0x57   ,0x57   ,0x57,
	0x59   ,0x59   ,0x59,
	0x5A   ,0x5A   ,0x5A,
	0x5B   ,0x5B   ,0x5B,
	0x5C   ,0x5C   ,0x5C,
	0x5E   ,0x5E   ,0x5E,
	0x5F   ,0x5F   ,0x5F,
	0x60   ,0x60   ,0x60,
	0x61   ,0x61   ,0x61,
	0x63   ,0x63   ,0x63,
	0x64   ,0x64   ,0x64,
	0x65   ,0x65   ,0x65,
	0x66   ,0x66   ,0x66,
	0x68   ,0x68   ,0x68,
	0x69   ,0x69   ,0x69,
	0x6A   ,0x6A   ,0x6A,
	0x6C   ,0x6C   ,0x6C,
	0x6D   ,0x6D   ,0x6D,
	0x6E   ,0x6E   ,0x6E,
	0x70   ,0x70   ,0x70,
	0x71   ,0x71   ,0x71,
	0x72   ,0x72   ,0x72,
	0x74   ,0x74   ,0x74,
	0x75   ,0x75   ,0x75,
	0x76   ,0x76   ,0x76,
	0x78   ,0x78   ,0x78,
	0x79   ,0x79   ,0x79,
	0x7A   ,0x7A   ,0x7A,
	0x7C   ,0x7C   ,0x7C,
	0x7D   ,0x7D   ,0x7D,
	0x7F   ,0x7F   ,0x7F,
	0x80   ,0x80   ,0x80,
	0x81   ,0x81   ,0x81,
	0x83   ,0x83   ,0x83,
	0x84   ,0x84   ,0x84,
	0x85   ,0x85   ,0x85,
	0x86   ,0x86   ,0x86,
	0x88   ,0x88   ,0x88,
	0x89   ,0x89   ,0x89,
	0x8A   ,0x8A   ,0x8A,
	0x8B   ,0x8B   ,0x8B,
	0x8D   ,0x8D   ,0x8D,
	0x8E   ,0x8E   ,0x8E,
	0x8F   ,0x8F   ,0x8F,
	0x90   ,0x90   ,0x90,
	0x92   ,0x92   ,0x92,
	0x93   ,0x93   ,0x93,
	0x94   ,0x94   ,0x94,
	0x95   ,0x95   ,0x95,
	0x96   ,0x96   ,0x96,
	0x98   ,0x98   ,0x98,
	0x99   ,0x99   ,0x99,
	0x9A   ,0x9A   ,0x9A,
	0x9B   ,0x9B   ,0x9B,
	0x9C   ,0x9C   ,0x9C,
	0x9E   ,0x9E   ,0x9E,
	0x9F   ,0x9F   ,0x9F,
	0xA0   ,0xA0   ,0xA0,
	0xA1   ,0xA1   ,0xA1,
	0xA2   ,0xA2   ,0xA2,
	0xA3   ,0xA3   ,0xA3,
	0xA5   ,0xA5   ,0xA5,
	0xA6   ,0xA6   ,0xA6,
	0xA7   ,0xA7   ,0xA7,
	0xA8   ,0xA8   ,0xA8,
	0xA9   ,0xA9   ,0xA9,
	0xAA   ,0xAA   ,0xAA,
	0xAB   ,0xAB   ,0xAB,
	0xAD   ,0xAD   ,0xAD,
	0xAE   ,0xAE   ,0xAE,
	0xAF   ,0xAF   ,0xAF,
	0xB0   ,0xB0   ,0xB0,
	0xB1   ,0xB1   ,0xB1,
	0xB2   ,0xB2   ,0xB2,
	0xB3   ,0xB3   ,0xB3,
	0xB4   ,0xB4   ,0xB4,
	0xB5   ,0xB5   ,0xB5,
	0xB6   ,0xB6   ,0xB6,
	0xB7   ,0xB7   ,0xB7,
	0xB9   ,0xB9   ,0xB9,
	0xBA   ,0xBA   ,0xBA,
	0xBB   ,0xBB   ,0xBB,
	0xBC   ,0xBC   ,0xBC,
	0xBD   ,0xBD   ,0xBD,
	0xBE   ,0xBE   ,0xBE,
	0xBF   ,0xBF   ,0xBF,
	0xC0   ,0xC0   ,0xC0,
	0xC1   ,0xC1   ,0xC1,
	0xC2   ,0xC2   ,0xC2,
	0xC3   ,0xC3   ,0xC3,
	0xC4   ,0xC4   ,0xC4,
	0xC5   ,0xC5   ,0xC5,
	0xC6   ,0xC6   ,0xC6,
	0xC7   ,0xC7   ,0xC7,
	0xC8   ,0xC8   ,0xC8,
	0xC9   ,0xC9   ,0xC9,
	0xCA   ,0xCA   ,0xCA,
	0xCB   ,0xCB   ,0xCB,
	0xCC   ,0xCC   ,0xCC,
	0xCD   ,0xCD   ,0xCD,
	0xCE   ,0xCE   ,0xCE,
	0xCF   ,0xCF   ,0xCF,
	0xD0   ,0xD0   ,0xD0,
	0xD1   ,0xD1   ,0xD1,
	0xD2   ,0xD2   ,0xD2,
	0xD3   ,0xD3   ,0xD3,
	0xD4   ,0xD4   ,0xD4,
	0xD5   ,0xD5   ,0xD5,
	0xD6   ,0xD6   ,0xD6,
	0xD6   ,0xD6   ,0xD6,
	0xD7   ,0xD7   ,0xD7,
	0xD8   ,0xD8   ,0xD8,
	0xD9   ,0xD9   ,0xD9,
	0xDA   ,0xDA   ,0xDA,
	0xDB   ,0xDB   ,0xDB,
	0xDC   ,0xDC   ,0xDC,
	0xDD   ,0xDD   ,0xDD,
	0xDE   ,0xDE   ,0xDE,
	0xDF   ,0xDF   ,0xDF,
	0xDF   ,0xDF   ,0xDF,
	0xE0   ,0xE0   ,0xE0,
	0xE1   ,0xE1   ,0xE1,
	0xE2   ,0xE2   ,0xE2,
	0xE3   ,0xE3   ,0xE3,
	0xE4   ,0xE4   ,0xE4,
	0xE5   ,0xE5   ,0xE5,
	0xE6   ,0xE6   ,0xE6,
	0xE6   ,0xE6   ,0xE6,
	0xE7   ,0xE7   ,0xE7,
	0xE8   ,0xE8   ,0xE8,
	0xE9   ,0xE9   ,0xE9,
	0xEA   ,0xEA   ,0xEA,
	0xEB   ,0xEB   ,0xEB,
	0xEB   ,0xEB   ,0xEB,
	0xEC   ,0xEC   ,0xEC,
	0xED   ,0xED   ,0xED,
	0xEE   ,0xEE   ,0xEE,
	0xEF   ,0xEF   ,0xEF,
	0xEF   ,0xEF   ,0xEF,
	0xF0   ,0xF0   ,0xF0,
	0xF1   ,0xF1   ,0xF1,
	0xF2   ,0xF2   ,0xF2,
	0xF3   ,0xF3   ,0xF3,
	0xF3   ,0xF3   ,0xF3,
	0xF4   ,0xF4   ,0xF4,
	0xF5   ,0xF5   ,0xF5,
	0xF6   ,0xF6   ,0xF6,
	0xF6   ,0xF6   ,0xF6,
	0xF7   ,0xF7   ,0xF7,
	0xF8   ,0xF8   ,0xF8,
	0xF9   ,0xF9   ,0xF9,
	0xF9   ,0xF9   ,0xF9,
	0xFA   ,0xFA   ,0xFA,
	0xFB   ,0xFB   ,0xFB,
	0xFB   ,0xFB   ,0xFB,
	0xFC   ,0xFC   ,0xFC,
	0xFD   ,0xFD   ,0xFD,
	0xFE   ,0xFE   ,0xFE,
	0xFF   ,0xFF   ,0xFF,
};
//#endif

//#ifdef LAOTOU
static const BYTE cvbs_pal0_Laotou[]=
{
	0x00,0x00,0x00,0x00,0x2F,0x00,0x00,0xFF,0xFF,0xFF,0x60,0x60,0x60,0x28,0xF7,0x00,
	0x68,0x7F,0x06,0x08,0x7C,0x5A,0xD3,0x04,0x01,0x00,0x87,0x00,0xF0,0x00,0xFF,0x03,
	0x80,0x04,0x00,0x00,0x00,0x00,0x04,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x03,0x00,0x73,0xBF,0x00,0xBC,0xBC,0x40,0x50,0x10,0x20,0x03,0x00,0x00,0x00,0x00,
	0x00,0x02,0x00,0x01,0x00,0x10,0x01,0x00,0xD0,0x02,0xE0,0x01,0x10,0x00,0x05,0x00,
	0x30,0x61,0x3D,0x08,0xC9,0x02,0x20,0x01,0x00,0xD8,0x39,0x01,0x02,0x00,0x01,0x00,
	0x00,0x88,0x18,0x0F,0x04,0x08,0x88,0x1E,0x80,0x80,0x00,0x7F,0x80,0x00,0x10,0x00,
	0x20,0x00,0xCC,0x1B,0x00,0x13,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x80,0x80,
	0x00,0x3F,0x9E,0x00,0xB0,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x10,0xFF,0x40,
	0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
	0x28,0x00,0x22,0x00,0x39,0x05,0xE0,0x01,0x7B,0x05,0x2F,0x02,0x20,0x00,0x05,0x00,
	0x81,0x10,0x00,0x00,0x00,0x60,0x05,0x00,0x2A,0x02,0x02,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x03,0xE0,0x01,
	0xB0,0xA0,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x80,0x07,0x80,0xC0,0x80,0x00,0x00,
};

static const BYTE cvbs_pal1_Laotou[]=
{
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0xFF,0x03,0x00,0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x12,0x05,0x68,0x01,
	0x00,0x0F,0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x95,0x00,0xCC,0x95,0x32,0x68,0x95,0x81,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x80,0x00,
	0x30,0x00,0x10,0x01,0x01,0x29,0x00,0x20,0x03,0x1E,0x00,0xEA,0x01,0x00,0x09,0x4C,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,

};

static const BYTE cvbs_pal2_Laotou[]=
{
	0x32,0x0D,0x4B,0x00,0xD8,0x32,0x0A,0x22,0x70,0x15,0xA0,0x00,0x67,0x07,0x00,0x0C,
	0x27,0xB9,0x06,0x82,0x40,0x64,0x74,0xCB,0x2A,0x09,0x8A,0xCB,0x20,0x00,0x00,0x00,
	0x45,0x3E,0x00,0x80,0xE9,0x0F,0x2D,0x50,0x22,0x4E,0xD6,0x4E,0x23,0x48,0x90,0x49,
	0x2E,0xC1,0x70,0x0E,0x6C,0x90,0x70,0x0E,0x00,0x0A,0x0E,0x00,0x05,0x00,0x00,0x00,
	0x04,0xE7,0x96,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x02,0x6B,0x40,0x12,0xDB,0x15,0x9A,0x0E,0x48,
	0x35,0x00,0x00,0x00,0x00,0x00,0x05,0x2B,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x1F,0xFF,0x79,0x00,0x2A,0x09,0x84,0x8B,0x42,0xB2,0x79,0x00,0xF6,0xFD,0x00,0x00,
	0x01,0x00,0x42,0x39,0x07,0x20,0x03,0x10,0x00,0x00,0x0A,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

};
static const BYTE rgb0_Laotou[]=
{
	0x00,0x00,0x00,0x00,0x2F,0x00,0x00,0xFF,0xFF,0xFF,0x60,0x60,0x60,0x28,0xFF,0x00,
	0x68,0x7F,0x06,0x08,0x7C,0x5A,0xD3,0x04,0x01,0x00,0x87,0x00,0xF0,0x00,0xFF,0x03,
	0x80,0x04,0x00,0x00,0x00,0x00,0x04,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x03,0x60,0x3F,0xBF,0x00,0xBC,0xBC,0x40,0x50,0x10,0x20,0x03,0x00,0x00,0x00,0x00,
	0x00,0x02,0x00,0x01,0x00,0x10,0x01,0x00,0xD0,0x02,0xE0,0x01,0x10,0x00,0x05,0x00,
	0x30,0x18,0x00,0x09,0x20,0x03,0xEA,0x01,0xA4,0x8B,0x10,0x02,0x10,0x00,0x00,0x00,
	0x00,0x88,0x18,0x0F,0x04,0x08,0x88,0x1E,0x80,0x80,0x00,0x7F,0x80,0x00,0x10,0x00,
	0x20,0x00,0x00,0x20,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x80,0x80,
	0x00,0x23,0xA6,0x00,0xB0,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x10,0xFF,0x40,
	0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
	0x1B,0x00,0x23,0x00,0x39,0x05,0xE0,0x01,0x63,0x05,0x2F,0x02,0x20,0x00,0x05,0x00,
	0x81,0x10,0x00,0x00,0x00,0xDA,0x05,0x00,0x26,0x02,0x02,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x03,0xE0,0x01,
	0xB0,0xA0,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x80,0x07,0x80,0xC0,0x80,0x00,0x00,
};
static const BYTE rgb2_Laotou[]=
{
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0xFF,0x03,0x00,0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x12,0x05,0x68,0x01,
	0x00,0x0F,0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x95,0x00,0xCC,0x95,0x32,0x68,0x95,0x81,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x80,0x00,
	0x30,0x00,0x10,0x01,0x01,0x29,0x00,0x20,0x03,0x1E,0x00,0xEA,0x01,0x00,0x09,0x4C,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,

};

static const BYTE cvbs_ntsc0_Laotou[]=
{
	0x00,0x00,0x00,0x00,0x2F,0x00,0x00,0xFF,0xFF,0xFF,0x60,0x60,0x60,0x28,0xBF,0x00,
	0x68,0x7F,0x06,0x08,0x7C,0x5A,0xD3,0x04,0x01,0x00,0x87,0x00,0xF0,0x00,0xFF,0x03,
	0x80,0x04,0x00,0x00,0x00,0x00,0x04,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x03,0x00,0x7C,0xBF,0x00,0xBC,0xBC,0x40,0x50,0x10,0x20,0x03,0x00,0x00,0x00,0x00,
	0x00,0x02,0x00,0x01,0x00,0x10,0x01,0x00,0xD0,0x02,0xE0,0x01,0x10,0x00,0x05,0x00,
	0x30,0x96,0xDF,0x06,0xC5,0x02,0xF0,0x00,0x81,0xD6,0x06,0x01,0x02,0x00,0x01,0x00,
	0x00,0x88,0x18,0x0F,0x04,0x08,0x88,0x1E,0x80,0x80,0x00,0x7F,0x80,0x00,0x10,0x00,
	0x20,0x00,0x48,0x1C,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x80,0x80,
	0x00,0x91,0x7B,0x00,0x00,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x44,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x10,0xFF,0x40,
	0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
	0x25,0x00,0x14,0x00,0x00,0x05,0xE0,0x01,0xB6,0x04,0x2F,0x02,0x20,0x00,0x03,0x00,
	0x81,0x10,0x00,0x00,0x00,0x60,0x05,0x00,0x31,0x02,0x02,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x03,0xE0,0x01,
	0xB0,0xA0,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x80,0x07,0x80,0xC0,0x80,0x00,0x00,
};
static const BYTE cvbs_ntsc1_Laotou[]=
{
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x20,0x67,0x55,0x03,0x10,0xB3,0x05,0x00,0x03,0x20,0x00,0x00,0x18,0x02,0x00,0x00,
	0x00,0x0F,0x00,0x0F,0x00,0x00,0x20,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x95,0x00,0xCC,0x95,0x32,0x68,0x95,0x81,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x80,0x00,
	0x30,0x00,0x10,0x01,0x01,0x00,0x00,0xD0,0x02,0x00,0x00,0xF0,0x00,0x00,0x02,0x4C,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,

};
static const BYTE cvbs_ntsc2_Laotou[]=
{
	0x00,0x09,0x4B,0x00,0xD8,0x32,0x0A,0x22,0x70,0x15,0xA0,0x00,0x8A,0x07,0x00,0x0C,
	0x27,0xB9,0x06,0x82,0x40,0x64,0x74,0xCB,0x21,0xF0,0x7C,0x0F,0x20,0x00,0x00,0x00,
	0x38,0x3E,0x00,0x80,0xE9,0x0F,0x2D,0x50,0x22,0x4E,0xD6,0x4E,0x23,0x48,0x8C,0x45,
	0x24,0x61,0x70,0x0E,0x6C,0x90,0x70,0x0E,0x00,0x0A,0x01,0x06,0x00,0x00,0x00,0x00,
	0x04,0xE7,0x96,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x02,0x6B,0x40,0x12,0xDB,0x15,0x9A,0x0E,0x48,
	0x35,0x00,0x00,0x00,0x00,0x00,0x05,0x2B,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x20,0x00,0x00,0x00,0x21,0xF0,0x7C,0x0F,0xBD,0x20,0x0D,0x3F,0x00,0xFE,0x00,0x01,
	0x01,0x00,0x42,0x39,0x07,0x20,0x03,0x10,0x00,0x00,0x0A,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

static const BYTE yc_ntsc0_Laotou[]=
{
	0x00,0x00,0x00,0x00,0x2F,0x00,0x00,0xFF,0xFF,0xFF,0x80,0x6C,0x80,0x28,0xFF,0x00,
	0x58,0x05,0x06,0x2A,0xDC,0x5A,0xD3,0xC7,0x14,0x06,0x87,0x00,0xF0,0x00,0xFF,0x03,
	0x80,0x04,0x00,0x00,0x00,0x00,0x04,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x03,0x00,0x7F,0xB0,0x00,0xBC,0xBC,0x40,0x50,0x10,0x20,0x03,0x00,0x00,0x00,0x00,
	0x00,0x02,0x00,0x01,0x00,0x10,0x01,0x00,0xD0,0x02,0xE0,0x01,0x10,0x00,0x05,0x00,
	0x00,0x00,0x00,0x00,0xC5,0x02,0xF4,0x00,0x82,0xD6,0x06,0x01,0x02,0x00,0x01,0x00,
	0x00,0x88,0x18,0x0F,0x04,0x08,0x88,0x1E,0x80,0x80,0x00,0x7F,0x80,0x00,0x10,0x00,
	0x20,0x00,0xFA,0x1A,0xB8,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x80,0x80,
	0x00,0x00,0x00,0x00,0xB0,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x46,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x10,0xFF,0x40,
	0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
	0x28,0x00,0x2B,0x00,0x20,0x03,0xE0,0x02,0x89,0x03,0x2F,0x02,0x20,0x00,0x04,0x00,
	0x81,0x00,0x00,0x00,0x00,0x60,0x05,0x00,0x20,0x02,0x02,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x03,0xFE,0x02,
	0xB0,0xA0,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x80,0x07,0x80,0xC0,0x80,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,

};
static const BYTE yc_ntsc1_Laotou[]=
{
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0xFF,0x03,0x00,0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x12,0x05,0x68,0x01,
	0x00,0x0F,0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x95,0x00,0xCC,0x95,0x32,0x68,0x95,0x81,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x80,0x00,
	0x30,0x00,0x10,0x01,0x01,0x29,0x00,0x20,0x03,0x1E,0x00,0xEA,0x01,0x00,0x09,0x4C,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x50,0x04,0x00,0x54,0x57,0xC3,0xA2,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x00,0x00,

};
static const BYTE yc_ntsc2_Laotou[]=
{
	0x00,0x49,0x4B,0x00,0xD8,0x32,0x0A,0x22,0x70,0x15,0xA0,0x00,0x67,0x07,0x00,0x0C,
	0x27,0xB9,0x06,0x82,0x40,0x64,0x74,0xCB,0x21,0xF0,0x7C,0x0F,0x20,0x00,0x00,0x00,
	0x3E,0x3E,0x00,0x80,0xE9,0x0F,0x2D,0x50,0x22,0x4E,0xD6,0x4E,0x23,0x48,0x8E,0x45,
	0x2E,0x69,0x70,0x0E,0x6C,0x90,0x70,0x0E,0x00,0x0A,0xA6,0x04,0x00,0x00,0x00,0x00,
	0x04,0xE7,0x96,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x02,0x6B,0x40,0x12,0xDB,0x15,0x9A,0x0E,0x48,
	0x35,0x00,0x00,0x00,0x00,0x00,0x05,0x2B,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x20,0x00,0x1A,0x00,0x21,0xEE,0x7C,0x10,0x33,0xAD,0x56,0x15,0x07,0xF8,0x00,0x02,
	0x01,0x00,0x52,0x39,0x07,0x20,0x03,0x10,0x00,0x00,0x0A,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,


};

static const BYTE pcGm_Laotou[] = 
{
	0x00,   0x00,   0x00,
	0x00,   0x00,   0x00,
	0x01,   0x01,   0x01,
	0x01,   0x01,   0x01,
	0x02,   0x02,   0x02,
	0x02,   0x02,   0x02,
	0x03,   0x03,   0x03,
	0x03,   0x03,   0x03,
	0x04,   0x04,   0x04,
	0x04,   0x04,   0x04,
	0x05,   0x05,   0x05,
	0x06,   0x06,   0x06,
	0x06,   0x06,   0x06,
	0x07,   0x07,   0x07,
	0x07,   0x07,   0x07,
	0x08,   0x08,   0x08,
	0x08,   0x08,   0x08,
	0x09,   0x09,   0x09,
	0x0A,   0x0A,   0x0A,
	0x0A,   0x0A,   0x0A,
	0x0B,   0x0B,   0x0B,
	0x0C,   0x0C,   0x0C,
	0x0C,   0x0C,   0x0C,
	0x0D,   0x0D,   0x0D,
	0x0E,   0x0E,   0x0E,
	0x0E,   0x0E,   0x0E,
	0x0F,   0x0F,   0x0F,
	0x10,   0x10,   0x10,
	0x10,   0x10,   0x10,
	0x11,   0x11,   0x11,
	0x12,   0x12,   0x12,
	0x12,   0x12,   0x12,
	0x13,   0x13,   0x13,
	0x14,   0x14,   0x14,
	0x15,   0x15,   0x15,
	0x15,   0x15,   0x15,
	0x16,   0x16,   0x16,
	0x17,   0x17,   0x17,
	0x18,   0x18,   0x18,
	0x18,   0x18,   0x18,
	0x19,   0x19,   0x19,
	0x1A,   0x1A,   0x1A,
	0x1B,   0x1B,   0x1B,
	0x1C,   0x1C,   0x1C,
	0x1D,   0x1D,   0x1D,
	0x1D,   0x1D,   0x1D,
	0x1E,   0x1E,   0x1E,
	0x1F,   0x1F,   0x1F,
	0x20,   0x20,   0x20,
	0x21,   0x21,   0x21,
	0x22,   0x22,   0x22,
	0x23,   0x23,   0x23,
	0x24,   0x24,   0x24,
	0x24,   0x24,   0x24,
	0x25,   0x25,   0x25,
	0x26,   0x26,   0x26,
	0x27,   0x27,   0x27,
	0x28,   0x28,   0x28,
	0x29,   0x29,   0x29,
	0x2A,   0x2A,   0x2A,
	0x2B,   0x2B,   0x2B,
	0x2C,   0x2C,   0x2C,
	0x2D,   0x2D,   0x2D,
	0x2E,   0x2E,   0x2E,
	0x2F,   0x2F,   0x2F,
	0x30,   0x30,   0x30,
	0x31,   0x31,   0x31,
	0x32,   0x32,   0x32,
	0x33,   0x33,   0x33,
	0x34,   0x34,   0x34,
	0x35,   0x35,   0x35,
	0x36,   0x36,   0x36,
	0x37,   0x37,   0x37,
	0x38,   0x38,   0x38,
	0x3A,   0x3A,   0x3A,
	0x3B,   0x3B,   0x3B,
	0x3C,   0x3C,   0x3C,
	0x3D,   0x3D,   0x3D,
	0x3E,   0x3E,   0x3E,
	0x3F,   0x3F,   0x3F,
	0x40,   0x40,   0x40,
	0x41,   0x41,   0x41,
	0x43,   0x43,   0x43,
	0x44,   0x44,   0x44,
	0x45,   0x45,   0x45,
	0x46,   0x46,   0x46,
	0x47,   0x47,   0x47,
	0x48,   0x48,   0x48,
	0x4A,   0x4A,   0x4A,
	0x4B,   0x4B,   0x4B,
	0x4C,   0x4C,   0x4C,
	0x4D,   0x4D,   0x4D,
	0x4F,   0x4F,   0x4F,
	0x50,   0x50,   0x50,
	0x51,   0x51,   0x51,
	0x52,   0x52,   0x52,
	0x54,   0x54,   0x54,
	0x55,   0x55,   0x55,
	0x56,   0x56,   0x56,
	0x58,   0x58,   0x58,
	0x59,   0x59,   0x59,
	0x5A,   0x5A,   0x5A,
	0x5B,   0x5B,   0x5B,
	0x5D,   0x5D,   0x5D,
	0x5E,   0x5E,   0x5E,
	0x60,   0x60,   0x60,
	0x61,   0x61,   0x61,
	0x62,   0x62,   0x62,
	0x64,   0x64,   0x64,
	0x65,   0x65,   0x65,
	0x66,   0x66,   0x66,
	0x68,   0x68,   0x68,
	0x69,   0x69,   0x69,
	0x6B,   0x6B,   0x6B,
	0x6C,   0x6C,   0x6C,
	0x6E,   0x6E,   0x6E,
	0x6F,   0x6F,   0x6F,
	0x70,   0x70,   0x70,
	0x72,   0x72,   0x72,
	0x73,   0x73,   0x73,
	0x75,   0x75,   0x75,
	0x76,   0x76,   0x76,
	0x78,   0x78,   0x78,
	0x79,   0x79,   0x79,
	0x7B,   0x7B,   0x7B,
	0x7C,   0x7C,   0x7C,
	0x7E,   0x7E,   0x7E,
	0x7F,   0x7F,   0x7F,
	0x81,   0x81,   0x81,
	0x83,   0x83,   0x83,
	0x85,   0x85,   0x85,
	0x87,   0x87,   0x87,
	0x88,   0x88,   0x88,
	0x8A,   0x8A,   0x8A,
	0x8C,   0x8C,   0x8C,
	0x8E,   0x8E,   0x8E,
	0x8F,   0x8F,   0x8F,
	0x91,   0x91,   0x91,
	0x93,   0x93,   0x93,
	0x95,   0x95,   0x95,
	0x96,   0x96,   0x96,
	0x98,   0x98,   0x98,
	0x9A,   0x9A,   0x9A,
	0x9B,   0x9B,   0x9B,
	0x9D,   0x9D,   0x9D,
	0x9F,   0x9F,   0x9F,
	0xA0,   0xA0,   0xA0,
	0xA2,   0xA2,   0xA2,
	0xA4,   0xA4,   0xA4,
	0xA5,   0xA5,   0xA5,
	0xA7,   0xA7,   0xA7,
	0xA8,   0xA8,   0xA8,
	0xAA,   0xAA,   0xAA,
	0xAB,   0xAB,   0xAB,
	0xAD,   0xAD,   0xAD,
	0xAE,   0xAE,   0xAE,
	0xB0,   0xB0,   0xB0,
	0xB1,   0xB1,   0xB1,
	0xB3,   0xB3,   0xB3,
	0xB4,   0xB4,   0xB4,
	0xB6,   0xB6,   0xB6,
	0xB7,   0xB7,   0xB7,
	0xB8,   0xB8,   0xB8,
	0xBA,   0xBA,   0xBA,
	0xBB,   0xBB,   0xBB,
	0xBD,   0xBD,   0xBD,
	0xBE,   0xBE,   0xBE,
	0xBF,   0xBF,   0xBF,
	0xC1,   0xC1,   0xC1,
	0xC2,   0xC2,   0xC2,
	0xC3,   0xC3,   0xC3,
	0xC4,   0xC4,   0xC4,
	0xC6,   0xC6,   0xC6,
	0xC7,   0xC7,   0xC7,
	0xC8,   0xC8,   0xC8,
	0xC9,   0xC9,   0xC9,
	0xCB,   0xCB,   0xCB,
	0xCC,   0xCC,   0xCC,
	0xCD,   0xCD,   0xCD,
	0xCE,   0xCE,   0xCE,
	0xCF,   0xCF,   0xCF,
	0xD0,   0xD0,   0xD0,
	0xD2,   0xD2,   0xD2,
	0xD3,   0xD3,   0xD3,
	0xD4,   0xD4,   0xD4,
	0xD5,   0xD5,   0xD5,
	0xD6,   0xD6,   0xD6,
	0xD7,   0xD7,   0xD7,
	0xD8,   0xD8,   0xD8,
	0xD9,   0xD9,   0xD9,
	0xDA,   0xDA,   0xDA,
	0xDB,   0xDB,   0xDB,
	0xDC,   0xDC,   0xDC,
	0xDD,   0xDD,   0xDD,
	0xDE,   0xDE,   0xDE,
	0xDF,   0xDF,   0xDF,
	0xE0,   0xE0,   0xE0,
	0xE1,   0xE1,   0xE1,
	0xE2,   0xE2,   0xE2,
	0xE2,   0xE2,   0xE2,
	0xE3,   0xE3,   0xE3,
	0xE4,   0xE4,   0xE4,
	0xE5,   0xE5,   0xE5,
	0xE6,   0xE6,   0xE6,
	0xE7,   0xE7,   0xE7,
	0xE8,   0xE8,   0xE8,
	0xE8,   0xE8,   0xE8,
	0xE9,   0xE9,   0xE9,
	0xEA,   0xEA,   0xEA,
	0xEB,   0xEB,   0xEB,
	0xEB,   0xEB,   0xEB,
	0xEC,   0xEC,   0xEC,
	0xED,   0xED,   0xED,
	0xED,   0xED,   0xED,
	0xEE,   0xEE,   0xEE,
	0xEF,   0xEF,   0xEF,
	0xEF,   0xEF,   0xEF,
	0xF0,   0xF0,   0xF0,
	0xF1,   0xF1,   0xF1,
	0xF1,   0xF1,   0xF1,
	0xF2,   0xF2,   0xF2,
	0xF2,   0xF2,   0xF2,
	0xF3,   0xF3,   0xF3,
	0xF4,   0xF4,   0xF4,
	0xF4,   0xF4,   0xF4,
	0xF5,   0xF5,   0xF5,
	0xF5,   0xF5,   0xF5,
	0xF6,   0xF6,   0xF6,
	0xF6,   0xF6,   0xF6,
	0xF7,   0xF7,   0xF7,
	0xF7,   0xF7,   0xF7,
	0xF8,   0xF8,   0xF8,
	0xF8,   0xF8,   0xF8,
	0xF8,   0xF8,   0xF8,
	0xF9,   0xF9,   0xF9,
	0xF9,   0xF9,   0xF9,
	0xF9,   0xF9,   0xF9,
	0xFA,   0xFA,   0xFA,
	0xFA,   0xFA,   0xFA,
	0xFB,   0xFB,   0xFB,
	0xFB,   0xFB,   0xFB,
	0xFB,   0xFB,   0xFB,
	0xFB,   0xFB,   0xFB,
	0xFC,   0xFC,   0xFC,
	0xFC,   0xFC,   0xFC,
	0xFC,   0xFC,   0xFC,
	0xFC,   0xFC,   0xFC,
	0xFD,   0xFD,   0xFD,
	0xFD,   0xFD,   0xFD,
	0xFD,   0xFD,   0xFD,
	0xFD,   0xFD,   0xFD,
	0xFD,   0xFD,   0xFD,
	0xFE,   0xFE,   0xFE,
	0xFE,   0xFE,   0xFE,
	0xFE,   0xFE,   0xFE,
	0xFE,   0xFE,   0xFE,
};
//#endif

#define T103 0x50
int SourceCheck(int bReset)	// 0:Œﬁ ”∆µ ; 1:NTSC ; 2:PAL ; 3:SECAM
{
	return chip_saa7111.SourceCheck();
	//IICRead(0x4A, 0x1f, 1, &data);
}

BOOL FullScreen(BOOL bFullScreen , int bYC, BOOL bForce)	// ∑µªÿ «∑Ò»´∆¡ 1:»´∆¡ ; 0:≤ª»´∆¡
{
	BOOL	bRes = 0;

	if (bFullScreen && !sysConfig.bBrake && !bForce)
	{
		return 0;
	}
	if (bFullScreen)
	{
		if (bYC)	// yc
		{
			BackLight(FALSE);
			for(int i=0;i<255;i++)
			{
				IICWrite(T103+4,i,(BYTE*)&yc_ntsc2[i],1);
			}
			IICWrite(T103+4,255,0);
			IICWrite(0x50,0xe2,0x11);

			for(int i=0;i<0xf0;i++)
			{
				if(i!=0x71&&i!=0x93&&i!=0x94)
				{

					IICWrite(T103,i,(BYTE*)&yc_ntsc0[i],1);
				}
			}
			
			BYTE vPreset;
			if (sysConfig.bLightOn)
			{
				vPreset = sysConfig.sysParam.curBVPreset;
			}
			else
			{
				vPreset = sysConfig.sysParam.curVPreset;
			}
			switch(vPreset)
			{
			case 0:
				{
					IICWrite(0x50, 0x69, 148);
					IICWrite(0x50, 0x68, 148);
					IICWrite(0x50, 0x6c, 128);
					break;
				}
			case 1:
				{
					IICWrite(0x50, 0x69, 110);
					IICWrite(0x50, 0x68, 110);
					IICWrite(0x50, 0x6c, 128);
					break;
				}
			case 2:
				{
					IICWrite(0x50, 0x69, 135);
					IICWrite(0x50, 0x68, 115);
					IICWrite(0x50, 0x6c, 120);
					break;
				}
			case 3:
				{
					IICWrite(0x50, 0x69, 128);
					IICWrite(0x50, 0x68, 128);
					IICWrite(0x50, 0x6c, 128);
					IICWrite(0x50, 0x6b, 0x7f);
					break;
				}
			case 4:
				{
					if (sysConfig.bLightOn)
					{
						IICWrite(0x50, 0x69, sysConfig.sysParam.curBLightness);
						IICWrite(0x50, 0x68, sysConfig.sysParam.curBContast);
						IICWrite(0x50, 0x6c, sysConfig.sysParam.curBSaturation);
						IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
					}
					else
					{
						IICWrite(0x50, 0x69, sysConfig.sysParam.curLightness);
						IICWrite(0x50, 0x68, sysConfig.sysParam.curContast);
						IICWrite(0x50, 0x6c, sysConfig.sysParam.curSaturation);
						IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
					}
					break;
				}
			case 5:
				{
					break;
				}
			}

			IICWrite(0x50,0xe2,0x11);
			IICWrite(T103+4,0x3f,0x1);
			IICWrite(T103+4,0x3f,0x0);
			IICWrite(0x50,0xe2,0x11);
			VideoSelect(1);
			bRes = 1;
		}
		else
		{
			int source = SourceCheck();
			if (source == 1)	//ntsc
			{
				sysConfig.curVFormat = 1;
				BackLight(FALSE);
				for(int i=0;i<255;i++)
				{
					IICWrite(T103+4,i,(BYTE*)&cvbs_ntsc2[i],1);
				}

				IICWrite(T103+4,255,0);
				IICWrite(0x50,0xe2,0x11);


				for(int i=0;i<0xf0;i++)
				{
					if(i!=0x71&&i!=0x93&&i!=0x94)
					{
						IICWrite(T103,i,(BYTE*)&cvbs_ntsc0[i],1);
					}
				}
				BYTE vPreset;
				if (sysConfig.bLightOn)
				{
					vPreset = sysConfig.sysParam.curBVPreset;
				}
				else
				{
					vPreset = sysConfig.sysParam.curVPreset;
				}
				switch(vPreset)
				{
				case 0:
					{
						IICWrite(0x50, 0x69, 148);
						IICWrite(0x50, 0x68, 148);
						IICWrite(0x50, 0x6c, 128);
						break;
					}
				case 1:
					{
						IICWrite(0x50, 0x69, 110);
						IICWrite(0x50, 0x68, 110);
						IICWrite(0x50, 0x6c, 128);
						break;
					}
				case 2:
					{
						IICWrite(0x50, 0x69, 135);
						IICWrite(0x50, 0x68, 115);
						IICWrite(0x50, 0x6c, 120);
						break;
					}
				case 3:
					{
						IICWrite(0x50, 0x69, 128);
						IICWrite(0x50, 0x68, 128);
						IICWrite(0x50, 0x6c, 128);
						IICWrite(0x50, 0x6b, 0x7f);
						break;
					}
				case 4:
					{
						if (sysConfig.bLightOn)
						{
							IICWrite(0x50, 0x69, sysConfig.sysParam.curBLightness);
							IICWrite(0x50, 0x68, sysConfig.sysParam.curBContast);
							IICWrite(0x50, 0x6c, sysConfig.sysParam.curBSaturation);
							IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
						}
						else
						{
							IICWrite(0x50, 0x69, sysConfig.sysParam.curLightness);
							IICWrite(0x50, 0x68, sysConfig.sysParam.curContast);
							IICWrite(0x50, 0x6c, sysConfig.sysParam.curSaturation);
							IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
						}
						break;
					}
				case 5:
					{
						break;
					}
				}
				if (bForce)
				{
					CVBS(2);
				}
				IICWrite(0x50,0xe2,0x11);
				VideoSelect(1);
				bRes = 1;
			} 

			if(source == 2)	//pal
			{
				sysConfig.curVFormat = 2;
				BackLight(FALSE);
				for(int i=0;i<255;i++)
				{
					IICWrite(T103+4,i,(BYTE*)&cvbs_pal2[i],1);
				}
				IICWrite(T103+4,255,0);
				IICWrite(0x50,0xe2,0x11);

				for(int i=0;i<0xf0;i++)
				{
					if(i!=0x71&&i!=0x93&&i!=0x94)
					{
						IICWrite(T103,i,(BYTE*)&cvbs_pal0[i],1);
					}
				}
				BYTE vPreset;
				if (sysConfig.bLightOn)
				{
					vPreset = sysConfig.sysParam.curBVPreset;
				}
				else
				{
					vPreset = sysConfig.sysParam.curVPreset;
				}
				switch(vPreset)
				{
				case 0:
					{
						IICWrite(0x50, 0x69, 138);
						IICWrite(0x50, 0x68, 138);
						IICWrite(0x50, 0x6c, 128);
						break;
					}
				case 1:
					{
						IICWrite(0x50, 0x69, 110);
						IICWrite(0x50, 0x68, 110);
						IICWrite(0x50, 0x6c, 128);
						break;
					}
				case 2:
					{
						IICWrite(0x50, 0x69, 135);
						IICWrite(0x50, 0x68, 115);
						IICWrite(0x50, 0x6c, 120);
						break;
					}
				case 3:
					{
						IICWrite(0x50, 0x69, 128);
						IICWrite(0x50, 0x68, 128);
						IICWrite(0x50, 0x6c, 128);
						IICWrite(0x50, 0x6b, 0x7f);
						break;
					}
				case 4:
					{
						if (sysConfig.bLightOn)
						{
							IICWrite(0x50, 0x69, sysConfig.sysParam.curBLightness);
							IICWrite(0x50, 0x68, sysConfig.sysParam.curBContast);
							IICWrite(0x50, 0x6c, sysConfig.sysParam.curBSaturation);
							IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
						}
						else
						{
							IICWrite(0x50, 0x69, sysConfig.sysParam.curLightness);
							IICWrite(0x50, 0x68, sysConfig.sysParam.curContast);
							IICWrite(0x50, 0x6c, sysConfig.sysParam.curSaturation);
							IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
						}
						break;
					}
				case 5:
					{
						break;
					}
				}
				if (bForce)
				{
					CVBS(2);
				}
				IICWrite(0x50,0xe2,0x11);
				VideoSelect(1);
				bRes = 1;
			}
			if (source == 0)
			{
				sysConfig.curVFormat = 0;
				if (bForce)
				{
					BackLight(FALSE);
					for(int i=0;i<255;i++)
					{
						IICWrite(T103+4,i,(BYTE*)&cvbs_pal2[i],1);
					}
					IICWrite(T103+4,255,0);
					IICWrite(0x50,0xe2,0x11);

					for(int i=0;i<0xf0;i++)
					{
						if(i!=0x71&&i!=0x93&&i!=0x94)
						{
							IICWrite(T103,i,(BYTE*)&cvbs_pal0[i],1);
						}
					}
					BYTE vPreset;
					if (sysConfig.bLightOn)
					{
						vPreset = sysConfig.sysParam.curBVPreset;
					}
					else
					{
						vPreset = sysConfig.sysParam.curVPreset;
					}
					switch(vPreset)
					{
					case 0:
						{
							IICWrite(0x50, 0x69, 138);
							IICWrite(0x50, 0x68, 138);
							IICWrite(0x50, 0x6c, 128);
							break;
						}
					case 1:
						{
							IICWrite(0x50, 0x69, 110);
							IICWrite(0x50, 0x68, 110);
							IICWrite(0x50, 0x6c, 128);
							break;
						}
					case 2:
						{
							IICWrite(0x50, 0x69, 135);
							IICWrite(0x50, 0x68, 115);
							IICWrite(0x50, 0x6c, 120);
							break;
						}
					case 3:
						{
							IICWrite(0x50, 0x69, 128);
							IICWrite(0x50, 0x68, 128);
							IICWrite(0x50, 0x6c, 128);
							IICWrite(0x50, 0x6b, 0x7f);
							break;
						}
					case 4:
						{
							if (sysConfig.bLightOn)
							{
								IICWrite(0x50, 0x69, sysConfig.sysParam.curBLightness);
								IICWrite(0x50, 0x68, sysConfig.sysParam.curBContast);
								IICWrite(0x50, 0x6c, sysConfig.sysParam.curBSaturation);
								IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
							}
							else
							{
								IICWrite(0x50, 0x69, sysConfig.sysParam.curLightness);
								IICWrite(0x50, 0x68, sysConfig.sysParam.curContast);
								IICWrite(0x50, 0x6c, sysConfig.sysParam.curSaturation);
								IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
							}
							break;
						}
					case 5:
						{
							break;
						}
					}
					if (bForce)
					{
						CVBS(2);
					}
					IICWrite(0x50,0xe2,0x11);
					VideoSelect(1);
				}
				bRes = 0; // Œﬁ ”∆µ,≤ª»´∆¡
			}
		}
	}
	else
	{
		//for(int i=0;i<255;i++)
		//{
		//	while(!(IICWrite(T103+2,i,(BYTE*)&rgb2[i],1)));
		//}
		//while(!(IICWrite(T103+2,255,0)));
		//BackLight(FALSE);
		//VideoSelect(0);
		//Sleep(50);
		RETAILMSG(1,(TEXT("Go here\r\n")));
		chip_saa7111.Init();
		IICWrite(0x50,0xe2,0x11);
		for(int i=0;i<0xf0;i++)
		{
			if(i!=0x71&&i!=0x93&&i!=0x94)
			{
				IICWrite(T103,i,(BYTE*)&rgb0[i],1);
			}
		}
		BYTE vPreset;
		if (sysConfig.bLightOn)
		{
			vPreset = sysConfig.sysParam.curBVPreset;
		}
		else
		{
			vPreset = sysConfig.sysParam.curVPreset;
		}
		switch(vPreset)
		{
		case 0:
			{
				IICWrite(0x50, 0x69, 148);
				IICWrite(0x50, 0x68, 148);
				IICWrite(0x50, 0x6c, 128);
				break;
			}
		case 1:
			{
				IICWrite(0x50, 0x69, 110);
				IICWrite(0x50, 0x68, 110);
				IICWrite(0x50, 0x6c, 128);
				break;
			}
		case 2:
			{
				IICWrite(0x50, 0x69, 135);
				IICWrite(0x50, 0x68, 115);
				IICWrite(0x50, 0x6c, 120);
				break;
			}
		case 3:
			{
				IICWrite(0x50, 0x69, 128);
				IICWrite(0x50, 0x68, 128);
				IICWrite(0x50, 0x6c, 128);
				IICWrite(0x50, 0x6b, 0x7f);
				break;
			}
		case 4:
			{
				if (sysConfig.bLightOn)
				{
					IICWrite(0x50, 0x69, sysConfig.sysParam.curBLightness);
					IICWrite(0x50, 0x68, sysConfig.sysParam.curBContast);
					IICWrite(0x50, 0x6c, sysConfig.sysParam.curBSaturation);
					IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
				}
				else
				{
					IICWrite(0x50, 0x69, sysConfig.sysParam.curLightness);
					IICWrite(0x50, 0x68, sysConfig.sysParam.curContast);
					IICWrite(0x50, 0x6c, sysConfig.sysParam.curSaturation);
					IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
				}
				break;
			}
		case 5:
			{
				break;
			}
		}
		IICWrite(0x50,0xe2,0x11);

		bRes = 0;
	}
	Sleep(50);
	BackLight(50);
	return bRes;
}

void FullScreenSecam()
{
	sysConfig.bFullScreen = 1;
	if (!sysConfig.bBrake)
	{
		sysConfig.bFullScreen = 0;
		return;
	}
	BackLight(FALSE);
	{
		VideoSelect(1);
		for(int i=0;i<255;i++)
		{
			IICWrite(T103+4,i,(BYTE*)&cvbs_secam54[i],1);
		}
		IICWrite(T103+4,255,0);
		IICWrite(0x50,0xe2,0x11);
		//for(int i=0;i<255;i++)
		//{
		//	IICWrite(T103+2,i,(BYTE*)&cvbs_secam52[i],1);
		//}
		for(int i=0;i<0xf0;i++)
		{
			if(i!=0x71&&i!=0x93&&i!=0x94)
			{
				IICWrite(T103,i,(BYTE*)&cvbs_secam50[i],1);
			}
		}
		BYTE vPreset;
		if (sysConfig.bLightOn)
		{
			vPreset = sysConfig.sysParam.curBVPreset;
		}
		else
		{
			vPreset = sysConfig.sysParam.curVPreset;
		}
		switch(vPreset)
		{
		case 0:
			{
				IICWrite(0x50, 0x69, 148);
				IICWrite(0x50, 0x68, 148);
				IICWrite(0x50, 0x6c, 128);
				break;
			}
		case 1:
			{
				IICWrite(0x50, 0x69, 110);
				IICWrite(0x50, 0x68, 110);
				IICWrite(0x50, 0x6c, 128);
				break;
			}
		case 2:
			{
				IICWrite(0x50, 0x69, 135);
				IICWrite(0x50, 0x68, 115);
				IICWrite(0x50, 0x6c, 120);
				break;
			}
		case 3:
			{
				IICWrite(0x50, 0x69, 128);
				IICWrite(0x50, 0x68, 128);
				IICWrite(0x50, 0x6c, 128);
				sysConfig.sysParam.curHue = 0;
				IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
				break;
			}
		case 4:
			{
				if (sysConfig.bLightOn)
				{
					IICWrite(0x50, 0x69, sysConfig.sysParam.curBLightness);
					IICWrite(0x50, 0x68, sysConfig.sysParam.curBContast);
					IICWrite(0x50, 0x6c, sysConfig.sysParam.curBSaturation);
					IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
				}
				else
				{
					IICWrite(0x50, 0x69, sysConfig.sysParam.curLightness);
					IICWrite(0x50, 0x68, sysConfig.sysParam.curContast);
					IICWrite(0x50, 0x6c, sysConfig.sysParam.curSaturation);
					IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
				}
				break;
			}
		case 5:
			{
				break;
			}
		}
		IICWrite(0x50,0xe2,0x11);

	}
	Sleep(100);
	BackLight(50);
}

void FullScreenPal(int bCVBS2)	
{
	sysConfig.curVFormat = 2;
	if (bCVBS2 == 0)
	{
		sysConfig.bFullScreen = 1;
	}
	if (!sysConfig.bBrake && bCVBS2 == 0)
	{
		sysConfig.bFullScreen = 0;
		return;
	}
	BackLight(FALSE);
		{
			for(int i=0;i<255;i++)
			{
				IICWrite(T103+4,i,(BYTE*)&cvbs_pal2[i],1);
			}
			IICWrite(T103+4,255,0);
			IICWrite(0x50,0xe2,0x11);

			for(int i=0;i<0xf0;i++)
			{
				if(i!=0x71&&i!=0x93&&i!=0x94)
				{
					IICWrite(T103,i,(BYTE*)&cvbs_pal0[i],1);
				}
			}
			BYTE vPreset;
			if (sysConfig.bLightOn)
			{
				vPreset = sysConfig.sysParam.curBVPreset;
			}
			else
			{
				vPreset = sysConfig.sysParam.curVPreset;
			}
			switch(vPreset)
			{
			case 0:
				{
					IICWrite(0x50, 0x69, 148);
					IICWrite(0x50, 0x68, 148);
					IICWrite(0x50, 0x6c, 128);
					break;
				}
			case 1:
				{
					IICWrite(0x50, 0x69, 110);
					IICWrite(0x50, 0x68, 110);
					IICWrite(0x50, 0x6c, 128);
					break;
				}
			case 2:
				{
					IICWrite(0x50, 0x69, 135);
					IICWrite(0x50, 0x68, 115);
					IICWrite(0x50, 0x6c, 120);
					break;
				}
			case 3:
				{
					IICWrite(0x50, 0x69, 128);
					IICWrite(0x50, 0x68, 128);
					IICWrite(0x50, 0x6c, 128);
					sysConfig.sysParam.curHue = 0;
					IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
					break;
				}
			case 4:
				{
					if (sysConfig.bLightOn)
					{
						IICWrite(0x50, 0x69, sysConfig.sysParam.curBLightness);
						IICWrite(0x50, 0x68, sysConfig.sysParam.curBContast);
						IICWrite(0x50, 0x6c, sysConfig.sysParam.curBSaturation);
						IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
					}
					else
					{
						IICWrite(0x50, 0x69, sysConfig.sysParam.curLightness);
						IICWrite(0x50, 0x68, sysConfig.sysParam.curContast);
						IICWrite(0x50, 0x6c, sysConfig.sysParam.curSaturation);
						IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
					}
					break;
				}
			case 5:
				{
					break;
				}
			}
			if (bCVBS2)
			{
				CVBS(2);
			}
			IICWrite(0x50,0xe2,0x11);
			sysConfig.curVFormat = 0;
		}
	Sleep(100);
	BackLight(50);
}

void FullScreenNtsl(int bCVBS2)	
{
	sysConfig.curVFormat = 1;
	if (bCVBS2 == 0)
	{
		sysConfig.bFullScreen = 1;
	}
	if (!sysConfig.bBrake && bCVBS2 == 0)
	{
		sysConfig.bFullScreen = 0;
		return;
	}
	BackLight(FALSE);
	{
		for(int i=0;i<255;i++)
		{
			IICWrite(T103+4,i,(BYTE*)&cvbs_ntsc2[i],1);
		}
		IICWrite(T103+4,255,0);
		IICWrite(0x50,0xe2,0x11);

		for(int i=0;i<0xf0;i++)
		{
			if(i!=0x71&&i!=0x93&&i!=0x94)
			{
				IICWrite(T103,i,(BYTE*)&cvbs_ntsc0[i],1);
			}
		}
		BYTE vPreset;
		if (sysConfig.bLightOn)
		{
			vPreset = sysConfig.sysParam.curBVPreset;
		}
		else
		{
			vPreset = sysConfig.sysParam.curVPreset;
		}
		switch(vPreset)
		{
		case 0:
			{
				IICWrite(0x50, 0x69, 148);
				IICWrite(0x50, 0x68, 148);
				IICWrite(0x50, 0x6c, 128);
				break;
			}
		case 1:
			{
				IICWrite(0x50, 0x69, 110);
				IICWrite(0x50, 0x68, 110);
				IICWrite(0x50, 0x6c, 128);
				break;
			}
		case 2:
			{
				IICWrite(0x50, 0x69, 135);
				IICWrite(0x50, 0x68, 115);
				IICWrite(0x50, 0x6c, 120);
				break;
			}
		case 3:
			{
				IICWrite(0x50, 0x69, 128);
				IICWrite(0x50, 0x68, 128);
				IICWrite(0x50, 0x6c, 128);
				sysConfig.sysParam.curHue = 0;
				IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
				break;
			}
		case 4:
			{
				if (sysConfig.bLightOn)
				{
					IICWrite(0x50, 0x69, sysConfig.sysParam.curBLightness);
					IICWrite(0x50, 0x68, sysConfig.sysParam.curBContast);
					IICWrite(0x50, 0x6c, sysConfig.sysParam.curBSaturation);
					IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
				}
				else
				{

					IICWrite(0x50, 0x69, sysConfig.sysParam.curLightness);
					IICWrite(0x50, 0x68, sysConfig.sysParam.curContast);
					IICWrite(0x50, 0x6c, sysConfig.sysParam.curSaturation);
					IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
				}
				break;
			}
		case 5:
			{
				break;
			}
		}
		if (bCVBS2)
		{
			CVBS(2);
		}
		IICWrite(0x50,0xe2,0x11);

	}
	Sleep(100);
	BackLight(50);
}

void	VideoScale(BOOL zoomin)
{
	if (zoomin)
	{
		while(!IICWrite(T103,0x51,0x19));
		while(!IICWrite(T103,0x73,0x10));
		while(!IICWrite(T103,0x75,0x10));
		while(!IICWrite(T103,0x81,0x20));
		while(!IICWrite(T103,0x85,0x2F));
		while(!IICWrite(T103,0xb0,0x68));
		while(!IICWrite(T103,0xb2,0x33));
		while(!IICWrite(T103,0xb4,0x0C));
		while(!IICWrite(T103,0xc8,0x4F));
		while(!IICWrite(T103,0x3d,0x10));
		while(!IICWrite(0x50,0xe2,0x11));
		while(!IICWrite(T103+2,0xd9,0x1d));
		while(!IICWrite(T103+2,0x51,0x19));
		while(!IICWrite(0x50,0xe2,0x11));

	}
	else
	{
		while(!IICWrite(T103,0x51,rgb0[0x51]));
		while(!IICWrite(T103,0x73,rgb0[0x73]));
		while(!IICWrite(T103,0x75,rgb0[0x75]));
		while(!IICWrite(T103,0x81,rgb0[0x81]));
		while(!IICWrite(T103,0x85,rgb0[0x85]));
		while(!IICWrite(T103,0xb0,rgb0[0xb0]));
		while(!IICWrite(T103,0xb2,rgb0[0xb2]));
		while(!IICWrite(T103,0xb4,rgb0[0xb4]));
		while(!IICWrite(T103,0xc8,rgb0[0xc8]));
		while(!IICWrite(T103,0x3d,rgb0[0x3d]));
		while(!IICWrite(0x50,0xe2,0x11));
		while(!IICWrite(T103+2,0xd9,rgb2[0xd9]));
		while(!IICWrite(T103+2,0x51,rgb2[0x51]));
		while(!IICWrite(0x50,0xe2,0x11));
	}
}

/*
void FullScreen(BOOL bFullScreen)
{
#define T103 0x50

	if (bFullScreen)
	{
		for(int i=0;i<255;i++)
		{
			while(!(IICWrite(T103+4,i,(BYTE*)&cvbs_ntsc2[i],1)));
		}
		while(!(IICWrite(T103+4,255,0)));
		while(!IICWrite(0x50,0xe2,0x11));

		for(int i=0;i<0xf0;i++)
		{
			if(i!=0x71&&i!=0x93&&i!=0x94)
			{
				while(!(IICWrite(T103,i,(BYTE*)&cvbs_ntsc0[i],1)));
			}
		}
		while(!IICWrite(0x50,0xe2,0x11));
	}
	else
	{
		for(int i=0;i<255;i++)
		{
			while(!(IICWrite(T103+2,i,(BYTE*)&rgb2[i],1)));
		}
		while(!(IICWrite(T103+2,255,0)));
		while(!IICWrite(0x50,0xe2,0x11));

		for(int i=0;i<0xf0;i++)
		{
			if(i!=0x71&&i!=0x93&&i!=0x94)
				while(!(IICWrite(T103,i,(BYTE*)&rgb0[i],1)));
		}
		while(!IICWrite(0x50,0xe2,0x11));
	}
}
*/

//BYTE pcGm[] = {
//	0x00   ,0x00   ,0x00,
//	0x00   ,0x00   ,0x00,
//	0x00   ,0x00   ,0x00,
//	0x00   ,0x00   ,0x00,
//	0x01   ,0x01   ,0x01,
//	0x01   ,0x01   ,0x01,
//	0x01   ,0x01   ,0x01,
//	0x01   ,0x01   ,0x01,
//	0x01   ,0x01   ,0x01,
//	0x02   ,0x02   ,0x02,
//	0x02   ,0x02   ,0x02,
//	0x02   ,0x02   ,0x02,
//	0x02   ,0x02   ,0x02,
//	0x03   ,0x03   ,0x03,
//	0x03   ,0x03   ,0x03,
//	0x03   ,0x03   ,0x03,
//	0x04   ,0x04   ,0x04,
//	0x04   ,0x04   ,0x04,
//	0x04   ,0x04   ,0x04,
//	0x05   ,0x05   ,0x05,
//	0x05   ,0x05   ,0x05,
//	0x06   ,0x06   ,0x06,
//	0x06   ,0x06   ,0x06,
//	0x06   ,0x06   ,0x06,
//	0x07   ,0x07   ,0x07,
//	0x07   ,0x07   ,0x07,
//	0x08   ,0x08   ,0x08,
//	0x08   ,0x08   ,0x08,
//	0x09   ,0x09   ,0x09,
//	0x09   ,0x09   ,0x09,
//	0x0A   ,0x0A   ,0x0A,
//	0x0A   ,0x0A   ,0x0A,
//	0x0B   ,0x0B   ,0x0B,
//	0x0B   ,0x0B   ,0x0B,
//	0x0C   ,0x0C   ,0x0C,
//	0x0D   ,0x0D   ,0x0D,
//	0x0D   ,0x0D   ,0x0D,
//	0x0E   ,0x0E   ,0x0E,
//	0x0F   ,0x0F   ,0x0F,
//	0x0F   ,0x0F   ,0x0F,
//	0x10   ,0x10   ,0x10,
//	0x11   ,0x11   ,0x11,
//	0x11   ,0x11   ,0x11,
//	0x12   ,0x12   ,0x12,
//	0x13   ,0x13   ,0x13,
//	0x13   ,0x13   ,0x13,
//	0x14   ,0x14   ,0x14,
//	0x15   ,0x15   ,0x15,
//	0x16   ,0x16   ,0x16,
//	0x16   ,0x16   ,0x16,
//	0x17   ,0x17   ,0x17,
//	0x18   ,0x18   ,0x18,
//	0x19   ,0x19   ,0x19,
//	0x1A   ,0x1A   ,0x1A,
//	0x1B   ,0x1B   ,0x1B,
//	0x1B   ,0x1B   ,0x1B,
//	0x1C   ,0x1C   ,0x1C,
//	0x1D   ,0x1D   ,0x1D,
//	0x1E   ,0x1E   ,0x1E,
//	0x1F   ,0x1F   ,0x1F,
//	0x20   ,0x20   ,0x20,
//	0x21   ,0x21   ,0x21,
//	0x22   ,0x22   ,0x22,
//	0x23   ,0x23   ,0x23,
//	0x24   ,0x24   ,0x24,
//	0x25   ,0x25   ,0x25,
//	0x26   ,0x26   ,0x26,
//	0x27   ,0x27   ,0x27,
//	0x28   ,0x28   ,0x28,
//	0x29   ,0x29   ,0x29,
//	0x2A   ,0x2A   ,0x2A,
//	0x2B   ,0x2B   ,0x2B,
//	0x2D   ,0x2D   ,0x2D,
//	0x2E   ,0x2E   ,0x2E,
//	0x2F   ,0x2F   ,0x2F,
//	0x30   ,0x30   ,0x30,
//	0x31   ,0x31   ,0x31,
//	0x32   ,0x32   ,0x32,
//	0x33   ,0x33   ,0x33,
//	0x35   ,0x35   ,0x35,
//	0x36   ,0x36   ,0x36,
//	0x37   ,0x37   ,0x37,
//	0x38   ,0x38   ,0x38,
//	0x3A   ,0x3A   ,0x3A,
//	0x3B   ,0x3B   ,0x3B,
//	0x3C   ,0x3C   ,0x3C ,
//	0x3E   ,0x3E   ,0x3E ,
//	0x3F   ,0x3F   ,0x3F ,
//	0x40   ,0x40   ,0x40 ,
//	0x42   ,0x42   ,0x42 ,
//	0x43   ,0x43   ,0x43 ,
//	0x44   ,0x44   ,0x44 ,
//	0x46   ,0x46   ,0x46 ,
//	0x47   ,0x47   ,0x47 ,
//	0x48   ,0x48   ,0x48 ,
//	0x4A   ,0x4A   ,0x4A ,
//	0x4B   ,0x4B   ,0x4B ,
//	0x4D   ,0x4D   ,0x4D ,
//	0x4E   ,0x4E   ,0x4E ,
//	0x50   ,0x50   ,0x50 ,
//	0x51   ,0x51   ,0x51 ,
//	0x53   ,0x53   ,0x53 ,
//	0x54   ,0x54   ,0x54 ,
//	0x56   ,0x56   ,0x56 ,
//	0x57   ,0x57   ,0x57 ,
//	0x59   ,0x59   ,0x59 ,
//	0x5B   ,0x5B   ,0x5B ,
//	0x5C   ,0x5C   ,0x5C ,
//	0x5E   ,0x5E   ,0x5E ,
//	0x5F   ,0x5F   ,0x5F ,
//	0x61   ,0x61   ,0x61 ,
//	0x63   ,0x63   ,0x63 ,
//	0x64   ,0x64   ,0x64 ,
//	0x66   ,0x66   ,0x66 ,
//	0x68   ,0x68   ,0x68 ,
//	0x69   ,0x69   ,0x69 ,
//	0x6B   ,0x6B   ,0x6B ,
//	0x6D   ,0x6D   ,0x6D ,
//	0x6F   ,0x6F   ,0x6F ,
//	0x70   ,0x70   ,0x70 ,
//	0x72   ,0x72   ,0x72 ,
//	0x74   ,0x74   ,0x74 ,
//	0x76   ,0x76   ,0x76 ,
//	0x78   ,0x78   ,0x78 ,
//	0x7A   ,0x7A   ,0x7A ,
//	0x7B   ,0x7B   ,0x7B ,
//	0x7D   ,0x7D   ,0x7D ,
//	0x7F   ,0x7F   ,0x7F ,
//	0x81   ,0x81   ,0x81 ,
//	0x83   ,0x83   ,0x83 ,
//	0x84   ,0x84   ,0x84 ,
//	0x86   ,0x86   ,0x86 ,
//	0x88   ,0x88   ,0x88 ,
//	0x89   ,0x89   ,0x89 ,
//	0x8B   ,0x8B   ,0x8B ,
//	0x8C   ,0x8C   ,0x8C ,
//	0x8E   ,0x8E   ,0x8E ,
//	0x90   ,0x90   ,0x90 ,
//	0x91   ,0x91   ,0x91 ,
//	0x93   ,0x93   ,0x93 ,
//	0x94   ,0x94   ,0x94 ,
//	0x96   ,0x96   ,0x96 ,
//	0x97   ,0x97   ,0x97 ,
//	0x99   ,0x99   ,0x99 ,
//	0x9A   ,0x9A   ,0x9A ,
//	0x9C   ,0x9C   ,0x9C ,
//	0x9D   ,0x9D   ,0x9D ,
//	0x9F   ,0x9F   ,0x9F ,
//	0xA0   ,0xA0   ,0xA0 ,
//	0xA2   ,0xA2   ,0xA2 ,
//	0xA3   ,0xA3   ,0xA3 ,
//	0xA5   ,0xA5   ,0xA5 ,
//	0xA6   ,0xA6   ,0xA6 ,
//	0xA7   ,0xA7   ,0xA7 ,
//	0xA9   ,0xA9   ,0xA9 ,
//	0xAA   ,0xAA   ,0xAA ,
//	0xAC   ,0xAC   ,0xAC ,
//	0xAD   ,0xAD   ,0xAD ,
//	0xAE   ,0xAE   ,0xAE ,
//	0xB0   ,0xB0   ,0xB0 ,
//	0xB1   ,0xB1   ,0xB1 ,
//	0xB2   ,0xB2   ,0xB2 ,
//	0xB4   ,0xB4   ,0xB4 ,
//	0xB5   ,0xB5   ,0xB5 ,
//	0xB6   ,0xB6   ,0xB6 ,
//	0xB8   ,0xB8   ,0xB8 ,
//	0xB9   ,0xB9   ,0xB9 ,
//	0xBA   ,0xBA   ,0xBA ,
//	0xBB   ,0xBB   ,0xBB ,
//	0xBD   ,0xBD   ,0xBD ,
//	0xBE   ,0xBE   ,0xBE ,
//	0xBF   ,0xBF   ,0xBF ,
//	0xC0   ,0xC0   ,0xC0 ,
//	0xC1   ,0xC1   ,0xC1 ,
//	0xC3   ,0xC3   ,0xC3 ,
//	0xC4   ,0xC4   ,0xC4 ,
//	0xC5   ,0xC5   ,0xC5 ,
//	0xC6   ,0xC6   ,0xC6 ,
//	0xC7   ,0xC7   ,0xC7 ,
//	0xC8   ,0xC8   ,0xC8 ,
//	0xC9   ,0xC9   ,0xC9 ,
//	0xCB   ,0xCB   ,0xCB ,
//	0xCC   ,0xCC   ,0xCC ,
//	0xCD   ,0xCD   ,0xCD ,
//	0xCE   ,0xCE   ,0xCE ,
//	0xCF   ,0xCF   ,0xCF ,
//	0xD0   ,0xD0   ,0xD0 ,
//	0xD1   ,0xD1   ,0xD1 ,
//	0xD2   ,0xD2   ,0xD2 ,
//	0xD3   ,0xD3   ,0xD3 ,
//	0xD4   ,0xD4   ,0xD4 ,
//	0xD5   ,0xD5   ,0xD5 ,
//	0xD6   ,0xD6   ,0xD6 ,
//	0xD7   ,0xD7   ,0xD7 ,
//	0xD8   ,0xD8   ,0xD8 ,
//	0xD9   ,0xD9   ,0xD9 ,
//	0xDA   ,0xDA   ,0xDA ,
//	0xDB   ,0xDB   ,0xDB ,
//	0xDC   ,0xDC   ,0xDC ,
//	0xDD   ,0xDD   ,0xDD ,
//	0xDE   ,0xDE   ,0xDE ,
//	0xDE   ,0xDE   ,0xDE ,
//	0xDF   ,0xDF   ,0xDF ,
//	0xE0   ,0xE0   ,0xE0 ,
//	0xE1   ,0xE1   ,0xE1 ,
//	0xE2   ,0xE2   ,0xE2 ,
//	0xE3   ,0xE3   ,0xE3 ,
//	0xE4   ,0xE4   ,0xE4 ,
//	0xE4   ,0xE4   ,0xE4 ,
//	0xE5   ,0xE5   ,0xE5 ,
//	0xE6   ,0xE6   ,0xE6 ,
//	0xE7   ,0xE7   ,0xE7 ,
//	0xE8   ,0xE8   ,0xE8 ,
//	0xE8   ,0xE8   ,0xE8 ,
//	0xE9   ,0xE9   ,0xE9 ,
//	0xEA   ,0xEA   ,0xEA ,
//	0xEB   ,0xEB   ,0xEB ,
//	0xEB   ,0xEB   ,0xEB ,
//	0xEC   ,0xEC   ,0xEC ,
//	0xED   ,0xED   ,0xED ,
//	0xED   ,0xED   ,0xED ,
//	0xEE   ,0xEE   ,0xEE ,
//	0xEF   ,0xEF   ,0xEF ,
//	0xEF   ,0xEF   ,0xEF ,
//	0xF0   ,0xF0   ,0xF0 ,
//	0xF1   ,0xF1   ,0xF1 ,
//	0xF1   ,0xF1   ,0xF1 ,
//	0xF2   ,0xF2   ,0xF2 ,
//	0xF2   ,0xF2   ,0xF2 ,
//	0xF3   ,0xF3   ,0xF3 ,
//	0xF4   ,0xF4   ,0xF4 ,
//	0xF4   ,0xF4   ,0xF4 ,
//	0xF5   ,0xF5   ,0xF5 ,
//	0xF5   ,0xF5   ,0xF5 ,
//	0xF6   ,0xF6   ,0xF6 ,
//	0xF6   ,0xF6   ,0xF6 ,
//	0xF7   ,0xF7   ,0xF7 ,
//	0xF7   ,0xF7   ,0xF7 ,
//	0xF8   ,0xF8   ,0xF8 ,
//	0xF8   ,0xF8   ,0xF8 ,
//	0xF9   ,0xF9   ,0xF9 ,
//	0xF9   ,0xF9   ,0xF9 ,
//	0xFA   ,0xFA   ,0xFA ,
//	0xFA   ,0xFA   ,0xFA ,
//	0xFB   ,0xFB   ,0xFB ,
//	0xFB   ,0xFB   ,0xFB ,
//	0xFB   ,0xFB   ,0xFB ,
//	0xFC   ,0xFC   ,0xFC ,
//	0xFC   ,0xFC   ,0xFC ,
//	0xFD   ,0xFD   ,0xFD ,
//	0xFD   ,0xFD   ,0xFD ,
//	0xFD   ,0xFD   ,0xFD ,
//	0xFE   ,0xFE   ,0xFE ,
//	0xFE   ,0xFE   ,0xFE ,
//	0xFE   ,0xFE   ,0xFE ,
//	0xFF   ,0xFF   ,0xFF ,
//};


void WriteGamma(void)
{
	IICWrite(T103,0x93,0x00);
	for(int i=0;i<256;i++)
		IICWrite(T103,0x94,pcGm[i*3]);
	for(int i=0;i<256;i++)
		IICWrite(T103,0x94,pcGm[i*3+1]);
	for(int i=0;i<256;i++)
		IICWrite(T103,0x94,pcGm[i*3+2]);
}

void CVBS(int i)
{
	if (i == 1)
	{
		IICWrite(0x50,0x11,0x06);
		IICWrite(0x50,0x18,0x01);
		IICWrite(0x50,0x19,0x00);
		IICWrite(0x50,0xe2,0x11);
	}
	if (i == 2)
	{
		IICWrite(0x50,0x11,0x03);
		IICWrite(0x50,0x18,0x00);
		IICWrite(0x50,0x19,0x0A);
		IICWrite(0x50,0xe2,0x11);
	}
	IICWrite(T103+4,0x3f,0x1);
	IICWrite(T103+4,0x3f,0x0);
	//Sleep(200);
}

// ret = 1 ∆’Õ®◊¥Ã¨, ret = 2 µπ≥µ◊¥Ã¨
int ReadCVBS()
{
	BYTE ret1 = 0, ret2= 0, ret3 = 0;
	IICRead(0x50,0x18,1,&ret2);
	IICRead(0x50,0x11,1,&ret1);
	IICRead(0x50,0x19,1,&ret3);
	if (ret1 == 3 && ret2 == 0x21 && ret3 == 0x8)
	{
		return 2;
	}
	return 1;
}

#define T103 0x50
int SourceCheckT103()	// 0:Œﬁ ”∆µ ; 1:NTSC ; 2:PAL ; 3:SECAM
{
	unsigned char data = 0;
	IICRead(T103+4,0x3a,1,&data);
	IICRead(T103+4,0x3a,1,&data);
	if (data & 0x1)// || !(data&0x8) )//|| !(data&0x2)) // Œﬁ–≈∫≈ªÚ’ﬂ…´≤ Œ¥À¯∂®ªÚ’ﬂ––Œ¥À¯∂®
	{
		return 0;
	}
	Sleep(100);
	data = 0;
	IICRead(T103+4,0x3c,1,&data);
	if ((data&0xf) == 0)
	{
		return 1;
	}
	return 2;
}

SAA7111::CHANNEL iLastVideoChannel = SAA7111::CH_CVBS;
CRect rcMedia;
int mediaMode;
int mediaStatus;
int cameraFormat;
BOOL ToBackCamera()
{
	if ((ReadMachine() & MECHANISM_TYPE) == SPECAIL_MACHINE)
	{
		mediaStatus = MediaControl::GetMediaStatus();
		if (mediaStatus == MEDIAPLAY)
		{
			MediaControl::PauseMovie();
		}
		//SystemMute(1);
		return 1;
	}
	else
	{
		int source = SourceCheckT103();
		if (source == 1)	//ntsc
		{
			sysConfig.curVFormat = 1;
			BackLight(FALSE);
			for(int i=0;i<255;i++)
			{
				IICWrite(T103+4,i,(BYTE*)&cvbs_ntsc54_Tianma[i],1);
			}

			IICWrite(T103+4,255,0);
			IICWrite(0x50,0xe2,0x11);


			for(int i=0;i<0xf0;i++)
			{
				if(i!=0x71&&i!=0x93&&i!=0x94)
				{
					IICWrite(T103,i,(BYTE*)&cvbs_ntsc50_Tianma[i],1);
				}
			}
			BYTE vPreset;
			if (sysConfig.bLightOn)
			{
				vPreset = sysConfig.sysParam.curBVPreset;
			}
			else
			{
				vPreset = sysConfig.sysParam.curVPreset;
			}
			switch(vPreset)
			{
			case 0:
				{
					IICWrite(0x50, 0x69, 148);
					IICWrite(0x50, 0x68, 148);
					IICWrite(0x50, 0x6c, 128);
					break;
				}
			case 1:
				{
					IICWrite(0x50, 0x69, 110);
					IICWrite(0x50, 0x68, 110);
					IICWrite(0x50, 0x6c, 128);
					break;
				}
			case 2:
				{
					IICWrite(0x50, 0x69, 135);
					IICWrite(0x50, 0x68, 115);
					IICWrite(0x50, 0x6c, 120);
					break;
				}
			case 3:
				{
					IICWrite(0x50, 0x69, 128);
					IICWrite(0x50, 0x68, 128);
					IICWrite(0x50, 0x6c, 128);
					IICWrite(0x50, 0x6b, 0x7f);
					break;
				}
			case 4:
				{
					if (sysConfig.bLightOn)
					{
						IICWrite(0x50, 0x69, sysConfig.sysParam.curBLightness);
						IICWrite(0x50, 0x68, sysConfig.sysParam.curBContast);
						IICWrite(0x50, 0x6c, sysConfig.sysParam.curBSaturation);
						IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
					}
					else
					{
						IICWrite(0x50, 0x69, sysConfig.sysParam.curLightness);
						IICWrite(0x50, 0x68, sysConfig.sysParam.curContast);
						IICWrite(0x50, 0x6c, sysConfig.sysParam.curSaturation);
						IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
					}
					break;
				}
			case 5:
				{
					break;
				}
			}
			IICWrite(0x50,0xe2,0x11);
			BackLight(50);
			//SystemMute(1);
			return 1;
		} 

		if(source == 2)	//pal
		{
			sysConfig.curVFormat = 2;
			BackLight(FALSE);
			for(int i=0;i<255;i++)
			{
				IICWrite(T103+4,i,(BYTE*)&cvbs_pal54_Tianma[i],1);
			}
			IICWrite(T103+4,255,0);
			IICWrite(0x50,0xe2,0x11);

			for(int i=0;i<0xf0;i++)
			{
				if(i!=0x71&&i!=0x93&&i!=0x94)
				{
					IICWrite(T103,i,(BYTE*)&cvbs_pal50_Tianma[i],1);
				}
			}
			BYTE vPreset;
			if (sysConfig.bLightOn)
			{
				vPreset = sysConfig.sysParam.curBVPreset;
			}
			else
			{
				vPreset = sysConfig.sysParam.curVPreset;
			}
			switch(vPreset)
			{
			case 0:
				{
					IICWrite(0x50, 0x69, 138);
					IICWrite(0x50, 0x68, 138);
					IICWrite(0x50, 0x6c, 128);
					break;
				}
			case 1:
				{
					IICWrite(0x50, 0x69, 110);
					IICWrite(0x50, 0x68, 110);
					IICWrite(0x50, 0x6c, 128);
					break;
				}
			case 2:
				{
					IICWrite(0x50, 0x69, 135);
					IICWrite(0x50, 0x68, 115);
					IICWrite(0x50, 0x6c, 120);
					break;
				}
			case 3:
				{
					IICWrite(0x50, 0x69, 128);
					IICWrite(0x50, 0x68, 128);
					IICWrite(0x50, 0x6c, 128);
					IICWrite(0x50, 0x6b, 0x7f);
					break;
				}
			case 4:
				{
					if (sysConfig.bLightOn)
					{
						IICWrite(0x50, 0x69, sysConfig.sysParam.curBLightness);
						IICWrite(0x50, 0x68, sysConfig.sysParam.curBContast);
						IICWrite(0x50, 0x6c, sysConfig.sysParam.curBSaturation);
						IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
					}
					else
					{
						IICWrite(0x50, 0x69, sysConfig.sysParam.curLightness);
						IICWrite(0x50, 0x68, sysConfig.sysParam.curContast);
						IICWrite(0x50, 0x6c, sysConfig.sysParam.curSaturation);
						IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
					}
					break;
				}
			case 5:
				{
					break;
				}
			}
			IICWrite(0x50,0xe2,0x11);
			Sleep(200);
			BackLight(50);
			//SystemMute(1);
			return 1;
		}
		return 0;
	}
	return 0 ;
}

void ToNormalScreen()
{
	if (!sysConfig.bMute)
	{
		SystemMute(0);
	}
	if ((ReadMachine() & MECHANISM_TYPE)  == SPECAIL_MACHINE)
	{
		if (mediaStatus == MEDIAPLAY)
		{
			MediaControl::PlayMovie();
		}
	}
	else
	{
		BackLight(FALSE);
		IICWrite(0x50,0xe2,0x11);
		for(int i=0;i<0xf0;i++)
		{
			if(i!=0x71&&i!=0x93&&i!=0x94)
			{
				IICWrite(T103,i,(BYTE*)&rgb50_Tianma[i],1);
			}
		}
		BYTE vPreset;
		if (sysConfig.bLightOn)
		{
			vPreset = sysConfig.sysParam.curBVPreset;
		}
		else
		{
			vPreset = sysConfig.sysParam.curVPreset;
		}
		switch(vPreset)
		{
		case 0:
			{
				IICWrite(0x50, 0x69, 148);
				IICWrite(0x50, 0x68, 148);
				IICWrite(0x50, 0x6c, 128);
				break;
			}
		case 1:
			{
				IICWrite(0x50, 0x69, 110);
				IICWrite(0x50, 0x68, 110);
				IICWrite(0x50, 0x6c, 128);
				break;
			}
		case 2:
			{
				IICWrite(0x50, 0x69, 135);
				IICWrite(0x50, 0x68, 115);
				IICWrite(0x50, 0x6c, 120);
				break;
			}
		case 3:
			{
				IICWrite(0x50, 0x69, 128);
				IICWrite(0x50, 0x68, 128);
				IICWrite(0x50, 0x6c, 128);
				IICWrite(0x50, 0x6b, 0x7f);
				break;
			}
		case 4:
			{
				if (sysConfig.bLightOn)
				{
					IICWrite(0x50, 0x69, sysConfig.sysParam.curBLightness);
					IICWrite(0x50, 0x68, sysConfig.sysParam.curBContast);
					IICWrite(0x50, 0x6c, sysConfig.sysParam.curBSaturation);
					IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
				}
				else
				{
					IICWrite(0x50, 0x69, sysConfig.sysParam.curLightness);
					IICWrite(0x50, 0x68, sysConfig.sysParam.curContast);
					IICWrite(0x50, 0x6c, sysConfig.sysParam.curSaturation);
					IICWrite(0x50, 0x6b, 0x7f-40+sysConfig.sysParam.curHue);
				}
				break;
			}
		case 5:
			{
				break;
			}
		}
		IICWrite(0x50,0xe2,0x11);
		Sleep(200);
		BackLight(50);
	}
}

void ScreenToAndroid()
{
	BackLight(FALSE);
	IICWrite(0x50, 0x85, 0x84);
	IICWrite(0x50, 0xC8, 0x39);
	IICWrite(0x52, 0xD5, 0xD3);
	IICWrite(0x52, 0xD9, 0x15);
	IICWrite(0x50,0xe2,0x11);
	USBSwitch(0);
	Sleep(200);
	BackLight(TRUE);
	sysConfig.bWinceAndroid = MODE_ANDROID;
}

void ScreenToWince()
{
	BackLight(FALSE);
	IICWrite(0x50, 0x85, 0x95);
	IICWrite(0x50, 0xC8, 0x2E);
	IICWrite(0x52, 0xD5, 0x28);
	IICWrite(0x52, 0xD9, 0x14);
	IICWrite(0x50,0xe2,0x11);
	USBSwitch(1);
	Sleep(200);
	BackLight(TRUE);
}

//void AndroidKeyInit()
//{
//	GPIOSet('F', 5, 1);
//	GPIOSet('F', 6, 1);
//}

//void AndroidKeyHome()
//{
//	GPIOSet('F', 5, 0);
//	GPIOSet('F', 6, 0);
//	Sleep(100);
////	AndroidKeyInit();
//}

//void AndroidKeyMenu()
//{
//	GPIOSet('F', 5, 0);
//	GPIOSet('F', 6, 1);
//	Sleep(100);
////	AndroidKeyInit();
//}
//
//void AndroidKeyBack()
//{
//	GPIOSet('F', 5, 1);
//	GPIOSet('F', 6, 0);
//	Sleep(100);
////	AndroidKeyInit();
//}